Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ADMIRATION
    AS
    ASYNC
    BREAK
    CASE
    CATCH
    CLASS
    CONST
    CONSTRUCTOR
    CONTINUE
    DEFAULT
    DO
    ENUM
    EXTENDS
    EXTERNAL
    FACTORY
    FINAL
    FUNCTION
    GET
    HIDE
    IMPORT
    INFIX
    INIT
    INTERFACE
    IS
    LIBRARY
    NEQUAL
    NEW
    NULL
    OPEN
    OPERATOR
    OUT
    OVERRIDE
    PART
    SET
    SETPARAM
    STATIC
    SUPER
    SWITCH
    SYNC
    THIS
    THROW
    TRY
    TYPEALIAS
    TYPEOF
    WITH

Grammar

Rule 0     S' -> documento
Rule 1     documento -> implementa_funcion
Rule 2     documento -> instrucciones
Rule 3     cuerpoF -> asignacion
Rule 4     cuerpoF -> impresion
Rule 5     cuerpoF -> asignadores
Rule 6     cuerpoF -> comparators
Rule 7     cuerpoF -> list
Rule 8     cuerpoF -> mutableList
Rule 9     cuerpoF -> pair
Rule 10    cuerpoF -> inData
Rule 11    cuerpoF -> if
Rule 12    cuerpoF -> for
Rule 13    cuerpoF -> while
Rule 14    cuerpoF -> when
Rule 15    asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
Rule 16    designacion -> VAL
Rule 17    designacion -> VAR
Rule 18    tipo -> TINT
Rule 19    tipo -> TFLOAT
Rule 20    tipo -> STRING
Rule 21    diamondType -> MINOR tipo MAYOR
Rule 22    listAsignacion -> designacion VARIABLE DOUBLEPOINTS LIST diamondType
Rule 23    listAsignacion -> designacion VARIABLE
Rule 24    listOf -> LISTOF LPAREN elementos RPAREN
Rule 25    elementos -> elementos COMA valor
Rule 26    elementos -> valor
Rule 27    valor -> VINT
Rule 28    valor -> VFLOAT
Rule 29    valor -> STRING
Rule 30    list -> listAsignacion IGUAL listOf
Rule 31    add -> operado PLUS operado
Rule 32    subtract -> operado MINUS operado
Rule 33    multiply -> operado TIMES operado
Rule 34    divide -> operado DIVIDE operado
Rule 35    operado -> add
Rule 36    operado -> subtract
Rule 37    operado -> multiply
Rule 38    operado -> divide
Rule 39    operado -> dato
Rule 40    mutListAsignacion -> designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
Rule 41    mutListAsignacion -> designacion VARIABLE
Rule 42    mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN
Rule 43    mutableList -> mutListAsignacion IGUAL mutableListOf
Rule 44    pairAsignation -> designacion LPAREN VARIABLE COMA VARIABLE RPAREN
Rule 45    pairBody -> PAIR LPAREN valor COMA valor RPAREN
Rule 46    pair -> pairAsignation IGUAL pairBody
Rule 47    inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN
Rule 48    compareType -> dato IGUAL IGUAL dato
Rule 49    compareNotEqual -> dato NOT IGUAL dato
Rule 50    comparators -> compareType
Rule 51    comparators -> compareGreaterthan
Rule 52    comparators -> compareSmallerthan
Rule 53    comparators -> compareNotEqual
Rule 54    compareGreaterthan -> dato MAYOR dato
Rule 55    compareSmallerthan -> dato MINOR dato
Rule 56    impresion -> PRINTLN LPAREN datoretornado RPAREN
Rule 57    datoretornado -> operado
Rule 58    datoretornado -> booly
Rule 59    condicion -> booly
Rule 60    booly -> comparators
Rule 61    booly -> logic
Rule 62    booly -> TRUE
Rule 63    booly -> FALSE
Rule 64    logic -> booly logicoperador booly
Rule 65    logic -> NOT booly
Rule 66    logicoperador -> AND
Rule 67    logicoperador -> OR
Rule 68    if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY
Rule 69    if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
Rule 70    if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
Rule 71    elseif -> ELSE IF LPAREN condicion RPAREN LKEY instrucciones RKEY
Rule 72    else -> ELSE LKEY instrucciones RKEY
Rule 73    condicionFor -> condicionRango
Rule 74    condicionFor -> condicionBloque
Rule 75    condicionRango -> VARIABLE IN VINT DOT DOT VINT
Rule 76    condicionBloque -> VARIABLE IN LISTOF
Rule 77    for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
Rule 78    while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
Rule 79    when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
Rule 80    implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
Rule 81    implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
Rule 82    implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
Rule 83    implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
Rule 84    listaparametros -> parametro
Rule 85    listaparametros -> parametro COMA listaparametros
Rule 86    parametro -> VARIABLE DOUBLEPOINTS tipo
Rule 87    retorno -> RETURN asignado
Rule 88    instrucciones -> cuerpoF
Rule 89    instrucciones -> cuerpoF instrucciones
Rule 90    asignadores -> asigna
Rule 91    asignadores -> plusasigna
Rule 92    asignadores -> minasigna
Rule 93    asignadores -> multasigna
Rule 94    asignadores -> divasigna
Rule 95    asigna -> VARIABLE IGUAL asignado
Rule 96    plusasigna -> VARIABLE PLUS IGUAL asignado
Rule 97    minasigna -> VARIABLE MINUS IGUAL asignado
Rule 98    multasigna -> VARIABLE TIMES IGUAL asignado
Rule 99    divasigna -> VARIABLE DIVIDE IGUAL asignado
Rule 100   asignado -> comparators
Rule 101   asignado -> operado
Rule 102   dato -> valor
Rule 103   dato -> VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
ADMIRATION           : 
AND                  : 66
AS                   : 
ASYNC                : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 25 44 45 85
CONST                : 
CONSTRUCTOR          : 
CONTINUE             : 
DEFAULT              : 
DIVIDE               : 34 99
DO                   : 
DOT                  : 75 75
DOUBLEPOINTS         : 15 22 40 80 81 82 83 86
ELSE                 : 71 72
ENUM                 : 
EXTENDS              : 
EXTERNAL             : 
FACTORY              : 
FALSE                : 63
FINAL                : 
FOR                  : 77
FUN                  : 80 81 82 83
FUNCTION             : 
GET                  : 
HIDE                 : 
IF                   : 68 69 70 71
IGUAL                : 15 30 43 46 47 48 48 49 95 96 97 98 99
IMPORT               : 
IN                   : 75 76
INFIX                : 
INIT                 : 
INTERFACE            : 
IS                   : 
LIBRARY              : 
LIST                 : 22
LISTOF               : 24 76
LKEY                 : 68 69 70 71 72 77 78 79 80 81 82 83
LPAREN               : 24 42 44 45 47 56 68 69 70 71 77 78 79 80 81 82 83
MAYOR                : 21 54
MINOR                : 21 55
MINUS                : 32 97
MUTABLELIST          : 40
MUTABLELISTOF        : 42
NEQUAL               : 
NEW                  : 
NOT                  : 49 65
NULL                 : 
OPEN                 : 
OPERATOR             : 
OR                   : 67
OUT                  : 
OVERRIDE             : 
PAIR                 : 45
PART                 : 
PLUS                 : 31 96
PRINTLN              : 56
READLINE             : 47
RETURN               : 87
RKEY                 : 68 69 70 71 72 77 78 79 80 81 82 83
RPAREN               : 24 42 44 45 47 56 68 69 70 71 77 78 79 80 81 82 83
SET                  : 
SETPARAM             : 
STATIC               : 
STRING               : 20 29
SUPER                : 
SWITCH               : 
SYNC                 : 
TFLOAT               : 19
THIS                 : 
THROW                : 
TIMES                : 33 98
TINT                 : 18
TRUE                 : 62
TRY                  : 
TYPEALIAS            : 
TYPEOF               : 
VAL                  : 16
VAR                  : 17
VARIABLE             : 15 22 23 40 41 44 44 47 75 76 79 80 81 82 83 86 95 96 97 98 99 103
VFLOAT               : 28
VINT                 : 27 75 75
VOID                 : 82 83
WHEN                 : 79
WHILE                : 78
WITH                 : 
error                : 

Nonterminals, with rules where they appear

add                  : 35
asigna               : 90
asignacion           : 3
asignado             : 87 95 96 97 98 99
asignadores          : 5
booly                : 58 59 64 64 65
comparators          : 6 60 100
compareGreaterthan   : 51
compareNotEqual      : 53
compareSmallerthan   : 52
compareType          : 50
condicion            : 68 69 70 71 78
condicionBloque      : 74
condicionFor         : 77
condicionRango       : 73
cuerpoF              : 88 89
dato                 : 39 48 48 49 49 54 54 55 55
datoretornado        : 56
designacion          : 15 22 23 40 41 44 47
diamondType          : 22 40
divasigna            : 94
divide               : 38
documento            : 0
elementos            : 24 25 42
else                 : 69 70
elseif               : 70
for                  : 12
if                   : 11
implementa_funcion   : 1
impresion            : 4
inData               : 10
instrucciones        : 2 68 69 70 71 72 77 78 79 80 81 82 83 89
list                 : 7
listAsignacion       : 30
listOf               : 30
listaparametros      : 80 83 85
logic                : 61
logicoperador        : 64
minasigna            : 92
multasigna           : 93
multiply             : 37
mutListAsignacion    : 43
mutableList          : 8
mutableListOf        : 43
operado              : 31 31 32 32 33 33 34 34 57 101
pair                 : 9
pairAsignation       : 46
pairBody             : 46
parametro            : 84 85
plusasigna           : 91
retorno              : 80 81
subtract             : 36
tipo                 : 15 21 80 81 86
valor                : 15 25 26 45 45 102
when                 : 14
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . documento
    (1) documento -> . implementa_funcion
    (2) documento -> . instrucciones
    (80) implementa_funcion -> . FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (81) implementa_funcion -> . FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (82) implementa_funcion -> . FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
    (83) implementa_funcion -> . FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    FUN             shift and go to state 4
    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    documento                      shift and go to state 1
    implementa_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 1

    (0) S' -> documento .



state 2

    (1) documento -> implementa_funcion .

    $end            reduce using rule 1 (documento -> implementa_funcion .)


state 3

    (2) documento -> instrucciones .

    $end            reduce using rule 2 (documento -> instrucciones .)


state 4

    (80) implementa_funcion -> FUN . VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (81) implementa_funcion -> FUN . VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (82) implementa_funcion -> FUN . VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
    (83) implementa_funcion -> FUN . VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY

    VARIABLE        shift and go to state 44


state 5

    (95) asigna -> VARIABLE . IGUAL asignado
    (96) plusasigna -> VARIABLE . PLUS IGUAL asignado
    (97) minasigna -> VARIABLE . MINUS IGUAL asignado
    (98) multasigna -> VARIABLE . TIMES IGUAL asignado
    (99) divasigna -> VARIABLE . DIVIDE IGUAL asignado
    (103) dato -> VARIABLE .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MAYOR           reduce using rule 103 (dato -> VARIABLE .)
    MINOR           reduce using rule 103 (dato -> VARIABLE .)
    NOT             reduce using rule 103 (dato -> VARIABLE .)

  ! IGUAL           [ reduce using rule 103 (dato -> VARIABLE .) ]


state 6

    (88) instrucciones -> cuerpoF .
    (89) instrucciones -> cuerpoF . instrucciones
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    $end            reduce using rule 88 (instrucciones -> cuerpoF .)
    RKEY            reduce using rule 88 (instrucciones -> cuerpoF .)
    RETURN          reduce using rule 88 (instrucciones -> cuerpoF .)
    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    cuerpoF                        shift and go to state 6
    instrucciones                  shift and go to state 50
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 7

    (3) cuerpoF -> asignacion .

    PRINTLN         reduce using rule 3 (cuerpoF -> asignacion .)
    IF              reduce using rule 3 (cuerpoF -> asignacion .)
    FOR             reduce using rule 3 (cuerpoF -> asignacion .)
    WHILE           reduce using rule 3 (cuerpoF -> asignacion .)
    WHEN            reduce using rule 3 (cuerpoF -> asignacion .)
    VAL             reduce using rule 3 (cuerpoF -> asignacion .)
    VAR             reduce using rule 3 (cuerpoF -> asignacion .)
    VARIABLE        reduce using rule 3 (cuerpoF -> asignacion .)
    VINT            reduce using rule 3 (cuerpoF -> asignacion .)
    VFLOAT          reduce using rule 3 (cuerpoF -> asignacion .)
    STRING          reduce using rule 3 (cuerpoF -> asignacion .)
    $end            reduce using rule 3 (cuerpoF -> asignacion .)
    RKEY            reduce using rule 3 (cuerpoF -> asignacion .)
    RETURN          reduce using rule 3 (cuerpoF -> asignacion .)


state 8

    (4) cuerpoF -> impresion .

    PRINTLN         reduce using rule 4 (cuerpoF -> impresion .)
    IF              reduce using rule 4 (cuerpoF -> impresion .)
    FOR             reduce using rule 4 (cuerpoF -> impresion .)
    WHILE           reduce using rule 4 (cuerpoF -> impresion .)
    WHEN            reduce using rule 4 (cuerpoF -> impresion .)
    VAL             reduce using rule 4 (cuerpoF -> impresion .)
    VAR             reduce using rule 4 (cuerpoF -> impresion .)
    VARIABLE        reduce using rule 4 (cuerpoF -> impresion .)
    VINT            reduce using rule 4 (cuerpoF -> impresion .)
    VFLOAT          reduce using rule 4 (cuerpoF -> impresion .)
    STRING          reduce using rule 4 (cuerpoF -> impresion .)
    $end            reduce using rule 4 (cuerpoF -> impresion .)
    RKEY            reduce using rule 4 (cuerpoF -> impresion .)
    RETURN          reduce using rule 4 (cuerpoF -> impresion .)


state 9

    (5) cuerpoF -> asignadores .

    PRINTLN         reduce using rule 5 (cuerpoF -> asignadores .)
    IF              reduce using rule 5 (cuerpoF -> asignadores .)
    FOR             reduce using rule 5 (cuerpoF -> asignadores .)
    WHILE           reduce using rule 5 (cuerpoF -> asignadores .)
    WHEN            reduce using rule 5 (cuerpoF -> asignadores .)
    VAL             reduce using rule 5 (cuerpoF -> asignadores .)
    VAR             reduce using rule 5 (cuerpoF -> asignadores .)
    VARIABLE        reduce using rule 5 (cuerpoF -> asignadores .)
    VINT            reduce using rule 5 (cuerpoF -> asignadores .)
    VFLOAT          reduce using rule 5 (cuerpoF -> asignadores .)
    STRING          reduce using rule 5 (cuerpoF -> asignadores .)
    $end            reduce using rule 5 (cuerpoF -> asignadores .)
    RKEY            reduce using rule 5 (cuerpoF -> asignadores .)
    RETURN          reduce using rule 5 (cuerpoF -> asignadores .)


state 10

    (6) cuerpoF -> comparators .

    PRINTLN         reduce using rule 6 (cuerpoF -> comparators .)
    IF              reduce using rule 6 (cuerpoF -> comparators .)
    FOR             reduce using rule 6 (cuerpoF -> comparators .)
    WHILE           reduce using rule 6 (cuerpoF -> comparators .)
    WHEN            reduce using rule 6 (cuerpoF -> comparators .)
    VAL             reduce using rule 6 (cuerpoF -> comparators .)
    VAR             reduce using rule 6 (cuerpoF -> comparators .)
    VARIABLE        reduce using rule 6 (cuerpoF -> comparators .)
    VINT            reduce using rule 6 (cuerpoF -> comparators .)
    VFLOAT          reduce using rule 6 (cuerpoF -> comparators .)
    STRING          reduce using rule 6 (cuerpoF -> comparators .)
    $end            reduce using rule 6 (cuerpoF -> comparators .)
    RKEY            reduce using rule 6 (cuerpoF -> comparators .)
    RETURN          reduce using rule 6 (cuerpoF -> comparators .)


state 11

    (7) cuerpoF -> list .

    PRINTLN         reduce using rule 7 (cuerpoF -> list .)
    IF              reduce using rule 7 (cuerpoF -> list .)
    FOR             reduce using rule 7 (cuerpoF -> list .)
    WHILE           reduce using rule 7 (cuerpoF -> list .)
    WHEN            reduce using rule 7 (cuerpoF -> list .)
    VAL             reduce using rule 7 (cuerpoF -> list .)
    VAR             reduce using rule 7 (cuerpoF -> list .)
    VARIABLE        reduce using rule 7 (cuerpoF -> list .)
    VINT            reduce using rule 7 (cuerpoF -> list .)
    VFLOAT          reduce using rule 7 (cuerpoF -> list .)
    STRING          reduce using rule 7 (cuerpoF -> list .)
    $end            reduce using rule 7 (cuerpoF -> list .)
    RKEY            reduce using rule 7 (cuerpoF -> list .)
    RETURN          reduce using rule 7 (cuerpoF -> list .)


state 12

    (8) cuerpoF -> mutableList .

    PRINTLN         reduce using rule 8 (cuerpoF -> mutableList .)
    IF              reduce using rule 8 (cuerpoF -> mutableList .)
    FOR             reduce using rule 8 (cuerpoF -> mutableList .)
    WHILE           reduce using rule 8 (cuerpoF -> mutableList .)
    WHEN            reduce using rule 8 (cuerpoF -> mutableList .)
    VAL             reduce using rule 8 (cuerpoF -> mutableList .)
    VAR             reduce using rule 8 (cuerpoF -> mutableList .)
    VARIABLE        reduce using rule 8 (cuerpoF -> mutableList .)
    VINT            reduce using rule 8 (cuerpoF -> mutableList .)
    VFLOAT          reduce using rule 8 (cuerpoF -> mutableList .)
    STRING          reduce using rule 8 (cuerpoF -> mutableList .)
    $end            reduce using rule 8 (cuerpoF -> mutableList .)
    RKEY            reduce using rule 8 (cuerpoF -> mutableList .)
    RETURN          reduce using rule 8 (cuerpoF -> mutableList .)


state 13

    (9) cuerpoF -> pair .

    PRINTLN         reduce using rule 9 (cuerpoF -> pair .)
    IF              reduce using rule 9 (cuerpoF -> pair .)
    FOR             reduce using rule 9 (cuerpoF -> pair .)
    WHILE           reduce using rule 9 (cuerpoF -> pair .)
    WHEN            reduce using rule 9 (cuerpoF -> pair .)
    VAL             reduce using rule 9 (cuerpoF -> pair .)
    VAR             reduce using rule 9 (cuerpoF -> pair .)
    VARIABLE        reduce using rule 9 (cuerpoF -> pair .)
    VINT            reduce using rule 9 (cuerpoF -> pair .)
    VFLOAT          reduce using rule 9 (cuerpoF -> pair .)
    STRING          reduce using rule 9 (cuerpoF -> pair .)
    $end            reduce using rule 9 (cuerpoF -> pair .)
    RKEY            reduce using rule 9 (cuerpoF -> pair .)
    RETURN          reduce using rule 9 (cuerpoF -> pair .)


state 14

    (10) cuerpoF -> inData .

    PRINTLN         reduce using rule 10 (cuerpoF -> inData .)
    IF              reduce using rule 10 (cuerpoF -> inData .)
    FOR             reduce using rule 10 (cuerpoF -> inData .)
    WHILE           reduce using rule 10 (cuerpoF -> inData .)
    WHEN            reduce using rule 10 (cuerpoF -> inData .)
    VAL             reduce using rule 10 (cuerpoF -> inData .)
    VAR             reduce using rule 10 (cuerpoF -> inData .)
    VARIABLE        reduce using rule 10 (cuerpoF -> inData .)
    VINT            reduce using rule 10 (cuerpoF -> inData .)
    VFLOAT          reduce using rule 10 (cuerpoF -> inData .)
    STRING          reduce using rule 10 (cuerpoF -> inData .)
    $end            reduce using rule 10 (cuerpoF -> inData .)
    RKEY            reduce using rule 10 (cuerpoF -> inData .)
    RETURN          reduce using rule 10 (cuerpoF -> inData .)


state 15

    (11) cuerpoF -> if .

    PRINTLN         reduce using rule 11 (cuerpoF -> if .)
    IF              reduce using rule 11 (cuerpoF -> if .)
    FOR             reduce using rule 11 (cuerpoF -> if .)
    WHILE           reduce using rule 11 (cuerpoF -> if .)
    WHEN            reduce using rule 11 (cuerpoF -> if .)
    VAL             reduce using rule 11 (cuerpoF -> if .)
    VAR             reduce using rule 11 (cuerpoF -> if .)
    VARIABLE        reduce using rule 11 (cuerpoF -> if .)
    VINT            reduce using rule 11 (cuerpoF -> if .)
    VFLOAT          reduce using rule 11 (cuerpoF -> if .)
    STRING          reduce using rule 11 (cuerpoF -> if .)
    $end            reduce using rule 11 (cuerpoF -> if .)
    RKEY            reduce using rule 11 (cuerpoF -> if .)
    RETURN          reduce using rule 11 (cuerpoF -> if .)


state 16

    (12) cuerpoF -> for .

    PRINTLN         reduce using rule 12 (cuerpoF -> for .)
    IF              reduce using rule 12 (cuerpoF -> for .)
    FOR             reduce using rule 12 (cuerpoF -> for .)
    WHILE           reduce using rule 12 (cuerpoF -> for .)
    WHEN            reduce using rule 12 (cuerpoF -> for .)
    VAL             reduce using rule 12 (cuerpoF -> for .)
    VAR             reduce using rule 12 (cuerpoF -> for .)
    VARIABLE        reduce using rule 12 (cuerpoF -> for .)
    VINT            reduce using rule 12 (cuerpoF -> for .)
    VFLOAT          reduce using rule 12 (cuerpoF -> for .)
    STRING          reduce using rule 12 (cuerpoF -> for .)
    $end            reduce using rule 12 (cuerpoF -> for .)
    RKEY            reduce using rule 12 (cuerpoF -> for .)
    RETURN          reduce using rule 12 (cuerpoF -> for .)


state 17

    (13) cuerpoF -> while .

    PRINTLN         reduce using rule 13 (cuerpoF -> while .)
    IF              reduce using rule 13 (cuerpoF -> while .)
    FOR             reduce using rule 13 (cuerpoF -> while .)
    WHILE           reduce using rule 13 (cuerpoF -> while .)
    WHEN            reduce using rule 13 (cuerpoF -> while .)
    VAL             reduce using rule 13 (cuerpoF -> while .)
    VAR             reduce using rule 13 (cuerpoF -> while .)
    VARIABLE        reduce using rule 13 (cuerpoF -> while .)
    VINT            reduce using rule 13 (cuerpoF -> while .)
    VFLOAT          reduce using rule 13 (cuerpoF -> while .)
    STRING          reduce using rule 13 (cuerpoF -> while .)
    $end            reduce using rule 13 (cuerpoF -> while .)
    RKEY            reduce using rule 13 (cuerpoF -> while .)
    RETURN          reduce using rule 13 (cuerpoF -> while .)


state 18

    (14) cuerpoF -> when .

    PRINTLN         reduce using rule 14 (cuerpoF -> when .)
    IF              reduce using rule 14 (cuerpoF -> when .)
    FOR             reduce using rule 14 (cuerpoF -> when .)
    WHILE           reduce using rule 14 (cuerpoF -> when .)
    WHEN            reduce using rule 14 (cuerpoF -> when .)
    VAL             reduce using rule 14 (cuerpoF -> when .)
    VAR             reduce using rule 14 (cuerpoF -> when .)
    VARIABLE        reduce using rule 14 (cuerpoF -> when .)
    VINT            reduce using rule 14 (cuerpoF -> when .)
    VFLOAT          reduce using rule 14 (cuerpoF -> when .)
    STRING          reduce using rule 14 (cuerpoF -> when .)
    $end            reduce using rule 14 (cuerpoF -> when .)
    RKEY            reduce using rule 14 (cuerpoF -> when .)
    RETURN          reduce using rule 14 (cuerpoF -> when .)


state 19

    (15) asignacion -> designacion . VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (47) inData -> designacion . VARIABLE IGUAL READLINE LPAREN RPAREN
    (22) listAsignacion -> designacion . VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> designacion . VARIABLE
    (40) mutListAsignacion -> designacion . VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> designacion . VARIABLE
    (44) pairAsignation -> designacion . LPAREN VARIABLE COMA VARIABLE RPAREN

    VARIABLE        shift and go to state 51
    LPAREN          shift and go to state 52


state 20

    (102) dato -> valor .

    IGUAL           reduce using rule 102 (dato -> valor .)
    MAYOR           reduce using rule 102 (dato -> valor .)
    MINOR           reduce using rule 102 (dato -> valor .)
    NOT             reduce using rule 102 (dato -> valor .)
    PLUS            reduce using rule 102 (dato -> valor .)
    MINUS           reduce using rule 102 (dato -> valor .)
    TIMES           reduce using rule 102 (dato -> valor .)
    DIVIDE          reduce using rule 102 (dato -> valor .)
    PRINTLN         reduce using rule 102 (dato -> valor .)
    IF              reduce using rule 102 (dato -> valor .)
    FOR             reduce using rule 102 (dato -> valor .)
    WHILE           reduce using rule 102 (dato -> valor .)
    WHEN            reduce using rule 102 (dato -> valor .)
    VAL             reduce using rule 102 (dato -> valor .)
    VAR             reduce using rule 102 (dato -> valor .)
    VARIABLE        reduce using rule 102 (dato -> valor .)
    VINT            reduce using rule 102 (dato -> valor .)
    VFLOAT          reduce using rule 102 (dato -> valor .)
    STRING          reduce using rule 102 (dato -> valor .)
    $end            reduce using rule 102 (dato -> valor .)
    RKEY            reduce using rule 102 (dato -> valor .)
    RETURN          reduce using rule 102 (dato -> valor .)
    RPAREN          reduce using rule 102 (dato -> valor .)
    AND             reduce using rule 102 (dato -> valor .)
    OR              reduce using rule 102 (dato -> valor .)


state 21

    (56) impresion -> PRINTLN . LPAREN datoretornado RPAREN

    LPAREN          shift and go to state 53


state 22

    (90) asignadores -> asigna .

    PRINTLN         reduce using rule 90 (asignadores -> asigna .)
    IF              reduce using rule 90 (asignadores -> asigna .)
    FOR             reduce using rule 90 (asignadores -> asigna .)
    WHILE           reduce using rule 90 (asignadores -> asigna .)
    WHEN            reduce using rule 90 (asignadores -> asigna .)
    VAL             reduce using rule 90 (asignadores -> asigna .)
    VAR             reduce using rule 90 (asignadores -> asigna .)
    VARIABLE        reduce using rule 90 (asignadores -> asigna .)
    VINT            reduce using rule 90 (asignadores -> asigna .)
    VFLOAT          reduce using rule 90 (asignadores -> asigna .)
    STRING          reduce using rule 90 (asignadores -> asigna .)
    $end            reduce using rule 90 (asignadores -> asigna .)
    RKEY            reduce using rule 90 (asignadores -> asigna .)
    RETURN          reduce using rule 90 (asignadores -> asigna .)


state 23

    (91) asignadores -> plusasigna .

    PRINTLN         reduce using rule 91 (asignadores -> plusasigna .)
    IF              reduce using rule 91 (asignadores -> plusasigna .)
    FOR             reduce using rule 91 (asignadores -> plusasigna .)
    WHILE           reduce using rule 91 (asignadores -> plusasigna .)
    WHEN            reduce using rule 91 (asignadores -> plusasigna .)
    VAL             reduce using rule 91 (asignadores -> plusasigna .)
    VAR             reduce using rule 91 (asignadores -> plusasigna .)
    VARIABLE        reduce using rule 91 (asignadores -> plusasigna .)
    VINT            reduce using rule 91 (asignadores -> plusasigna .)
    VFLOAT          reduce using rule 91 (asignadores -> plusasigna .)
    STRING          reduce using rule 91 (asignadores -> plusasigna .)
    $end            reduce using rule 91 (asignadores -> plusasigna .)
    RKEY            reduce using rule 91 (asignadores -> plusasigna .)
    RETURN          reduce using rule 91 (asignadores -> plusasigna .)


state 24

    (92) asignadores -> minasigna .

    PRINTLN         reduce using rule 92 (asignadores -> minasigna .)
    IF              reduce using rule 92 (asignadores -> minasigna .)
    FOR             reduce using rule 92 (asignadores -> minasigna .)
    WHILE           reduce using rule 92 (asignadores -> minasigna .)
    WHEN            reduce using rule 92 (asignadores -> minasigna .)
    VAL             reduce using rule 92 (asignadores -> minasigna .)
    VAR             reduce using rule 92 (asignadores -> minasigna .)
    VARIABLE        reduce using rule 92 (asignadores -> minasigna .)
    VINT            reduce using rule 92 (asignadores -> minasigna .)
    VFLOAT          reduce using rule 92 (asignadores -> minasigna .)
    STRING          reduce using rule 92 (asignadores -> minasigna .)
    $end            reduce using rule 92 (asignadores -> minasigna .)
    RKEY            reduce using rule 92 (asignadores -> minasigna .)
    RETURN          reduce using rule 92 (asignadores -> minasigna .)


state 25

    (93) asignadores -> multasigna .

    PRINTLN         reduce using rule 93 (asignadores -> multasigna .)
    IF              reduce using rule 93 (asignadores -> multasigna .)
    FOR             reduce using rule 93 (asignadores -> multasigna .)
    WHILE           reduce using rule 93 (asignadores -> multasigna .)
    WHEN            reduce using rule 93 (asignadores -> multasigna .)
    VAL             reduce using rule 93 (asignadores -> multasigna .)
    VAR             reduce using rule 93 (asignadores -> multasigna .)
    VARIABLE        reduce using rule 93 (asignadores -> multasigna .)
    VINT            reduce using rule 93 (asignadores -> multasigna .)
    VFLOAT          reduce using rule 93 (asignadores -> multasigna .)
    STRING          reduce using rule 93 (asignadores -> multasigna .)
    $end            reduce using rule 93 (asignadores -> multasigna .)
    RKEY            reduce using rule 93 (asignadores -> multasigna .)
    RETURN          reduce using rule 93 (asignadores -> multasigna .)


state 26

    (94) asignadores -> divasigna .

    PRINTLN         reduce using rule 94 (asignadores -> divasigna .)
    IF              reduce using rule 94 (asignadores -> divasigna .)
    FOR             reduce using rule 94 (asignadores -> divasigna .)
    WHILE           reduce using rule 94 (asignadores -> divasigna .)
    WHEN            reduce using rule 94 (asignadores -> divasigna .)
    VAL             reduce using rule 94 (asignadores -> divasigna .)
    VAR             reduce using rule 94 (asignadores -> divasigna .)
    VARIABLE        reduce using rule 94 (asignadores -> divasigna .)
    VINT            reduce using rule 94 (asignadores -> divasigna .)
    VFLOAT          reduce using rule 94 (asignadores -> divasigna .)
    STRING          reduce using rule 94 (asignadores -> divasigna .)
    $end            reduce using rule 94 (asignadores -> divasigna .)
    RKEY            reduce using rule 94 (asignadores -> divasigna .)
    RETURN          reduce using rule 94 (asignadores -> divasigna .)


state 27

    (50) comparators -> compareType .

    PRINTLN         reduce using rule 50 (comparators -> compareType .)
    IF              reduce using rule 50 (comparators -> compareType .)
    FOR             reduce using rule 50 (comparators -> compareType .)
    WHILE           reduce using rule 50 (comparators -> compareType .)
    WHEN            reduce using rule 50 (comparators -> compareType .)
    VAL             reduce using rule 50 (comparators -> compareType .)
    VAR             reduce using rule 50 (comparators -> compareType .)
    VARIABLE        reduce using rule 50 (comparators -> compareType .)
    VINT            reduce using rule 50 (comparators -> compareType .)
    VFLOAT          reduce using rule 50 (comparators -> compareType .)
    STRING          reduce using rule 50 (comparators -> compareType .)
    $end            reduce using rule 50 (comparators -> compareType .)
    RKEY            reduce using rule 50 (comparators -> compareType .)
    RETURN          reduce using rule 50 (comparators -> compareType .)
    AND             reduce using rule 50 (comparators -> compareType .)
    OR              reduce using rule 50 (comparators -> compareType .)
    RPAREN          reduce using rule 50 (comparators -> compareType .)


state 28

    (51) comparators -> compareGreaterthan .

    PRINTLN         reduce using rule 51 (comparators -> compareGreaterthan .)
    IF              reduce using rule 51 (comparators -> compareGreaterthan .)
    FOR             reduce using rule 51 (comparators -> compareGreaterthan .)
    WHILE           reduce using rule 51 (comparators -> compareGreaterthan .)
    WHEN            reduce using rule 51 (comparators -> compareGreaterthan .)
    VAL             reduce using rule 51 (comparators -> compareGreaterthan .)
    VAR             reduce using rule 51 (comparators -> compareGreaterthan .)
    VARIABLE        reduce using rule 51 (comparators -> compareGreaterthan .)
    VINT            reduce using rule 51 (comparators -> compareGreaterthan .)
    VFLOAT          reduce using rule 51 (comparators -> compareGreaterthan .)
    STRING          reduce using rule 51 (comparators -> compareGreaterthan .)
    $end            reduce using rule 51 (comparators -> compareGreaterthan .)
    RKEY            reduce using rule 51 (comparators -> compareGreaterthan .)
    RETURN          reduce using rule 51 (comparators -> compareGreaterthan .)
    AND             reduce using rule 51 (comparators -> compareGreaterthan .)
    OR              reduce using rule 51 (comparators -> compareGreaterthan .)
    RPAREN          reduce using rule 51 (comparators -> compareGreaterthan .)


state 29

    (52) comparators -> compareSmallerthan .

    PRINTLN         reduce using rule 52 (comparators -> compareSmallerthan .)
    IF              reduce using rule 52 (comparators -> compareSmallerthan .)
    FOR             reduce using rule 52 (comparators -> compareSmallerthan .)
    WHILE           reduce using rule 52 (comparators -> compareSmallerthan .)
    WHEN            reduce using rule 52 (comparators -> compareSmallerthan .)
    VAL             reduce using rule 52 (comparators -> compareSmallerthan .)
    VAR             reduce using rule 52 (comparators -> compareSmallerthan .)
    VARIABLE        reduce using rule 52 (comparators -> compareSmallerthan .)
    VINT            reduce using rule 52 (comparators -> compareSmallerthan .)
    VFLOAT          reduce using rule 52 (comparators -> compareSmallerthan .)
    STRING          reduce using rule 52 (comparators -> compareSmallerthan .)
    $end            reduce using rule 52 (comparators -> compareSmallerthan .)
    RKEY            reduce using rule 52 (comparators -> compareSmallerthan .)
    RETURN          reduce using rule 52 (comparators -> compareSmallerthan .)
    AND             reduce using rule 52 (comparators -> compareSmallerthan .)
    OR              reduce using rule 52 (comparators -> compareSmallerthan .)
    RPAREN          reduce using rule 52 (comparators -> compareSmallerthan .)


state 30

    (53) comparators -> compareNotEqual .

    PRINTLN         reduce using rule 53 (comparators -> compareNotEqual .)
    IF              reduce using rule 53 (comparators -> compareNotEqual .)
    FOR             reduce using rule 53 (comparators -> compareNotEqual .)
    WHILE           reduce using rule 53 (comparators -> compareNotEqual .)
    WHEN            reduce using rule 53 (comparators -> compareNotEqual .)
    VAL             reduce using rule 53 (comparators -> compareNotEqual .)
    VAR             reduce using rule 53 (comparators -> compareNotEqual .)
    VARIABLE        reduce using rule 53 (comparators -> compareNotEqual .)
    VINT            reduce using rule 53 (comparators -> compareNotEqual .)
    VFLOAT          reduce using rule 53 (comparators -> compareNotEqual .)
    STRING          reduce using rule 53 (comparators -> compareNotEqual .)
    $end            reduce using rule 53 (comparators -> compareNotEqual .)
    RKEY            reduce using rule 53 (comparators -> compareNotEqual .)
    RETURN          reduce using rule 53 (comparators -> compareNotEqual .)
    AND             reduce using rule 53 (comparators -> compareNotEqual .)
    OR              reduce using rule 53 (comparators -> compareNotEqual .)
    RPAREN          reduce using rule 53 (comparators -> compareNotEqual .)


state 31

    (30) list -> listAsignacion . IGUAL listOf

    IGUAL           shift and go to state 54


state 32

    (43) mutableList -> mutListAsignacion . IGUAL mutableListOf

    IGUAL           shift and go to state 55


state 33

    (46) pair -> pairAsignation . IGUAL pairBody

    IGUAL           shift and go to state 56


state 34

    (68) if -> IF . LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> IF . LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> IF . LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else

    LPAREN          shift and go to state 57


state 35

    (77) for -> FOR . LPAREN condicionFor RPAREN LKEY instrucciones RKEY

    LPAREN          shift and go to state 58


state 36

    (78) while -> WHILE . LPAREN condicion RPAREN LKEY instrucciones RKEY

    LPAREN          shift and go to state 59


state 37

    (79) when -> WHEN . LPAREN VARIABLE RPAREN LKEY instrucciones RKEY

    LPAREN          shift and go to state 60


state 38

    (16) designacion -> VAL .

    VARIABLE        reduce using rule 16 (designacion -> VAL .)
    LPAREN          reduce using rule 16 (designacion -> VAL .)


state 39

    (17) designacion -> VAR .

    VARIABLE        reduce using rule 17 (designacion -> VAR .)
    LPAREN          reduce using rule 17 (designacion -> VAR .)


state 40

    (48) compareType -> dato . IGUAL IGUAL dato
    (54) compareGreaterthan -> dato . MAYOR dato
    (55) compareSmallerthan -> dato . MINOR dato
    (49) compareNotEqual -> dato . NOT IGUAL dato

    IGUAL           shift and go to state 61
    MAYOR           shift and go to state 62
    MINOR           shift and go to state 63
    NOT             shift and go to state 64


state 41

    (27) valor -> VINT .

    IGUAL           reduce using rule 27 (valor -> VINT .)
    MAYOR           reduce using rule 27 (valor -> VINT .)
    MINOR           reduce using rule 27 (valor -> VINT .)
    NOT             reduce using rule 27 (valor -> VINT .)
    PLUS            reduce using rule 27 (valor -> VINT .)
    MINUS           reduce using rule 27 (valor -> VINT .)
    TIMES           reduce using rule 27 (valor -> VINT .)
    DIVIDE          reduce using rule 27 (valor -> VINT .)
    PRINTLN         reduce using rule 27 (valor -> VINT .)
    IF              reduce using rule 27 (valor -> VINT .)
    FOR             reduce using rule 27 (valor -> VINT .)
    WHILE           reduce using rule 27 (valor -> VINT .)
    WHEN            reduce using rule 27 (valor -> VINT .)
    VAL             reduce using rule 27 (valor -> VINT .)
    VAR             reduce using rule 27 (valor -> VINT .)
    VARIABLE        reduce using rule 27 (valor -> VINT .)
    VINT            reduce using rule 27 (valor -> VINT .)
    VFLOAT          reduce using rule 27 (valor -> VINT .)
    STRING          reduce using rule 27 (valor -> VINT .)
    $end            reduce using rule 27 (valor -> VINT .)
    RKEY            reduce using rule 27 (valor -> VINT .)
    RETURN          reduce using rule 27 (valor -> VINT .)
    RPAREN          reduce using rule 27 (valor -> VINT .)
    AND             reduce using rule 27 (valor -> VINT .)
    OR              reduce using rule 27 (valor -> VINT .)
    COMA            reduce using rule 27 (valor -> VINT .)


state 42

    (28) valor -> VFLOAT .

    IGUAL           reduce using rule 28 (valor -> VFLOAT .)
    MAYOR           reduce using rule 28 (valor -> VFLOAT .)
    MINOR           reduce using rule 28 (valor -> VFLOAT .)
    NOT             reduce using rule 28 (valor -> VFLOAT .)
    PLUS            reduce using rule 28 (valor -> VFLOAT .)
    MINUS           reduce using rule 28 (valor -> VFLOAT .)
    TIMES           reduce using rule 28 (valor -> VFLOAT .)
    DIVIDE          reduce using rule 28 (valor -> VFLOAT .)
    PRINTLN         reduce using rule 28 (valor -> VFLOAT .)
    IF              reduce using rule 28 (valor -> VFLOAT .)
    FOR             reduce using rule 28 (valor -> VFLOAT .)
    WHILE           reduce using rule 28 (valor -> VFLOAT .)
    WHEN            reduce using rule 28 (valor -> VFLOAT .)
    VAL             reduce using rule 28 (valor -> VFLOAT .)
    VAR             reduce using rule 28 (valor -> VFLOAT .)
    VARIABLE        reduce using rule 28 (valor -> VFLOAT .)
    VINT            reduce using rule 28 (valor -> VFLOAT .)
    VFLOAT          reduce using rule 28 (valor -> VFLOAT .)
    STRING          reduce using rule 28 (valor -> VFLOAT .)
    $end            reduce using rule 28 (valor -> VFLOAT .)
    RKEY            reduce using rule 28 (valor -> VFLOAT .)
    RETURN          reduce using rule 28 (valor -> VFLOAT .)
    RPAREN          reduce using rule 28 (valor -> VFLOAT .)
    AND             reduce using rule 28 (valor -> VFLOAT .)
    OR              reduce using rule 28 (valor -> VFLOAT .)
    COMA            reduce using rule 28 (valor -> VFLOAT .)


state 43

    (29) valor -> STRING .

    IGUAL           reduce using rule 29 (valor -> STRING .)
    MAYOR           reduce using rule 29 (valor -> STRING .)
    MINOR           reduce using rule 29 (valor -> STRING .)
    NOT             reduce using rule 29 (valor -> STRING .)
    PLUS            reduce using rule 29 (valor -> STRING .)
    MINUS           reduce using rule 29 (valor -> STRING .)
    TIMES           reduce using rule 29 (valor -> STRING .)
    DIVIDE          reduce using rule 29 (valor -> STRING .)
    PRINTLN         reduce using rule 29 (valor -> STRING .)
    IF              reduce using rule 29 (valor -> STRING .)
    FOR             reduce using rule 29 (valor -> STRING .)
    WHILE           reduce using rule 29 (valor -> STRING .)
    WHEN            reduce using rule 29 (valor -> STRING .)
    VAL             reduce using rule 29 (valor -> STRING .)
    VAR             reduce using rule 29 (valor -> STRING .)
    VARIABLE        reduce using rule 29 (valor -> STRING .)
    VINT            reduce using rule 29 (valor -> STRING .)
    VFLOAT          reduce using rule 29 (valor -> STRING .)
    STRING          reduce using rule 29 (valor -> STRING .)
    $end            reduce using rule 29 (valor -> STRING .)
    RKEY            reduce using rule 29 (valor -> STRING .)
    RETURN          reduce using rule 29 (valor -> STRING .)
    RPAREN          reduce using rule 29 (valor -> STRING .)
    AND             reduce using rule 29 (valor -> STRING .)
    OR              reduce using rule 29 (valor -> STRING .)
    COMA            reduce using rule 29 (valor -> STRING .)


state 44

    (80) implementa_funcion -> FUN VARIABLE . LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (81) implementa_funcion -> FUN VARIABLE . LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (82) implementa_funcion -> FUN VARIABLE . LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
    (83) implementa_funcion -> FUN VARIABLE . LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY

    LPAREN          shift and go to state 65


state 45

    (95) asigna -> VARIABLE IGUAL . asignado
    (100) asignado -> . comparators
    (101) asignado -> . operado
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    asignado                       shift and go to state 67
    comparators                    shift and go to state 68
    operado                        shift and go to state 69
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    valor                          shift and go to state 20

state 46

    (96) plusasigna -> VARIABLE PLUS . IGUAL asignado

    IGUAL           shift and go to state 75


state 47

    (97) minasigna -> VARIABLE MINUS . IGUAL asignado

    IGUAL           shift and go to state 76


state 48

    (98) multasigna -> VARIABLE TIMES . IGUAL asignado

    IGUAL           shift and go to state 77


state 49

    (99) divasigna -> VARIABLE DIVIDE . IGUAL asignado

    IGUAL           shift and go to state 78


state 50

    (89) instrucciones -> cuerpoF instrucciones .

    $end            reduce using rule 89 (instrucciones -> cuerpoF instrucciones .)
    RKEY            reduce using rule 89 (instrucciones -> cuerpoF instrucciones .)
    RETURN          reduce using rule 89 (instrucciones -> cuerpoF instrucciones .)


state 51

    (15) asignacion -> designacion VARIABLE . DOUBLEPOINTS tipo IGUAL valor
    (47) inData -> designacion VARIABLE . IGUAL READLINE LPAREN RPAREN
    (22) listAsignacion -> designacion VARIABLE . DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> designacion VARIABLE .
    (40) mutListAsignacion -> designacion VARIABLE . DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> designacion VARIABLE .

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
    DOUBLEPOINTS    shift and go to state 79
    IGUAL           shift and go to state 80

  ! IGUAL           [ reduce using rule 23 (listAsignacion -> designacion VARIABLE .) ]
  ! IGUAL           [ reduce using rule 41 (mutListAsignacion -> designacion VARIABLE .) ]


state 52

    (44) pairAsignation -> designacion LPAREN . VARIABLE COMA VARIABLE RPAREN

    VARIABLE        shift and go to state 81


state 53

    (56) impresion -> PRINTLN LPAREN . datoretornado RPAREN
    (57) datoretornado -> . operado
    (58) datoretornado -> . booly
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (60) booly -> . comparators
    (61) booly -> . logic
    (62) booly -> . TRUE
    (63) booly -> . FALSE
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (64) logic -> . booly logicoperador booly
    (65) logic -> . NOT booly
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato

    TRUE            shift and go to state 87
    FALSE           shift and go to state 88
    VARIABLE        shift and go to state 66
    NOT             shift and go to state 89
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    datoretornado                  shift and go to state 82
    operado                        shift and go to state 83
    booly                          shift and go to state 84
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    comparators                    shift and go to state 85
    logic                          shift and go to state 86
    valor                          shift and go to state 20
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30

state 54

    (30) list -> listAsignacion IGUAL . listOf
    (24) listOf -> . LISTOF LPAREN elementos RPAREN

    LISTOF          shift and go to state 91

    listOf                         shift and go to state 90

state 55

    (43) mutableList -> mutListAsignacion IGUAL . mutableListOf
    (42) mutableListOf -> . MUTABLELISTOF LPAREN elementos RPAREN

    MUTABLELISTOF   shift and go to state 93

    mutableListOf                  shift and go to state 92

state 56

    (46) pair -> pairAsignation IGUAL . pairBody
    (45) pairBody -> . PAIR LPAREN valor COMA valor RPAREN

    PAIR            shift and go to state 95

    pairBody                       shift and go to state 94

state 57

    (68) if -> IF LPAREN . condicion RPAREN LKEY instrucciones RKEY
    (69) if -> IF LPAREN . condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> IF LPAREN . condicion RPAREN LKEY instrucciones RKEY elseif else
    (59) condicion -> . booly
    (60) booly -> . comparators
    (61) booly -> . logic
    (62) booly -> . TRUE
    (63) booly -> . FALSE
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (64) logic -> . booly logicoperador booly
    (65) logic -> . NOT booly
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    TRUE            shift and go to state 87
    FALSE           shift and go to state 88
    NOT             shift and go to state 89
    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    condicion                      shift and go to state 96
    booly                          shift and go to state 97
    comparators                    shift and go to state 85
    logic                          shift and go to state 86
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    dato                           shift and go to state 40
    valor                          shift and go to state 20

state 58

    (77) for -> FOR LPAREN . condicionFor RPAREN LKEY instrucciones RKEY
    (73) condicionFor -> . condicionRango
    (74) condicionFor -> . condicionBloque
    (75) condicionRango -> . VARIABLE IN VINT DOT DOT VINT
    (76) condicionBloque -> . VARIABLE IN LISTOF

    VARIABLE        shift and go to state 101

    condicionFor                   shift and go to state 98
    condicionRango                 shift and go to state 99
    condicionBloque                shift and go to state 100

state 59

    (78) while -> WHILE LPAREN . condicion RPAREN LKEY instrucciones RKEY
    (59) condicion -> . booly
    (60) booly -> . comparators
    (61) booly -> . logic
    (62) booly -> . TRUE
    (63) booly -> . FALSE
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (64) logic -> . booly logicoperador booly
    (65) logic -> . NOT booly
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    TRUE            shift and go to state 87
    FALSE           shift and go to state 88
    NOT             shift and go to state 89
    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    condicion                      shift and go to state 102
    booly                          shift and go to state 97
    comparators                    shift and go to state 85
    logic                          shift and go to state 86
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    dato                           shift and go to state 40
    valor                          shift and go to state 20

state 60

    (79) when -> WHEN LPAREN . VARIABLE RPAREN LKEY instrucciones RKEY

    VARIABLE        shift and go to state 103


state 61

    (48) compareType -> dato IGUAL . IGUAL dato

    IGUAL           shift and go to state 104


state 62

    (54) compareGreaterthan -> dato MAYOR . dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    dato                           shift and go to state 105
    valor                          shift and go to state 20

state 63

    (55) compareSmallerthan -> dato MINOR . dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    dato                           shift and go to state 106
    valor                          shift and go to state 20

state 64

    (49) compareNotEqual -> dato NOT . IGUAL dato

    IGUAL           shift and go to state 107


state 65

    (80) implementa_funcion -> FUN VARIABLE LPAREN . listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (81) implementa_funcion -> FUN VARIABLE LPAREN . RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (82) implementa_funcion -> FUN VARIABLE LPAREN . RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
    (83) implementa_funcion -> FUN VARIABLE LPAREN . listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY
    (84) listaparametros -> . parametro
    (85) listaparametros -> . parametro COMA listaparametros
    (86) parametro -> . VARIABLE DOUBLEPOINTS tipo

    RPAREN          shift and go to state 110
    VARIABLE        shift and go to state 108

    listaparametros                shift and go to state 109
    parametro                      shift and go to state 111

state 66

    (103) dato -> VARIABLE .

    IGUAL           reduce using rule 103 (dato -> VARIABLE .)
    MAYOR           reduce using rule 103 (dato -> VARIABLE .)
    MINOR           reduce using rule 103 (dato -> VARIABLE .)
    NOT             reduce using rule 103 (dato -> VARIABLE .)
    PLUS            reduce using rule 103 (dato -> VARIABLE .)
    MINUS           reduce using rule 103 (dato -> VARIABLE .)
    TIMES           reduce using rule 103 (dato -> VARIABLE .)
    DIVIDE          reduce using rule 103 (dato -> VARIABLE .)
    PRINTLN         reduce using rule 103 (dato -> VARIABLE .)
    IF              reduce using rule 103 (dato -> VARIABLE .)
    FOR             reduce using rule 103 (dato -> VARIABLE .)
    WHILE           reduce using rule 103 (dato -> VARIABLE .)
    WHEN            reduce using rule 103 (dato -> VARIABLE .)
    VAL             reduce using rule 103 (dato -> VARIABLE .)
    VAR             reduce using rule 103 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 103 (dato -> VARIABLE .)
    VINT            reduce using rule 103 (dato -> VARIABLE .)
    VFLOAT          reduce using rule 103 (dato -> VARIABLE .)
    STRING          reduce using rule 103 (dato -> VARIABLE .)
    $end            reduce using rule 103 (dato -> VARIABLE .)
    RKEY            reduce using rule 103 (dato -> VARIABLE .)
    RETURN          reduce using rule 103 (dato -> VARIABLE .)
    RPAREN          reduce using rule 103 (dato -> VARIABLE .)
    AND             reduce using rule 103 (dato -> VARIABLE .)
    OR              reduce using rule 103 (dato -> VARIABLE .)


state 67

    (95) asigna -> VARIABLE IGUAL asignado .

    PRINTLN         reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    IF              reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    FOR             reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    WHILE           reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    WHEN            reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    VAL             reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    VAR             reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    VARIABLE        reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    VINT            reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    VFLOAT          reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    STRING          reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    $end            reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    RKEY            reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)
    RETURN          reduce using rule 95 (asigna -> VARIABLE IGUAL asignado .)


state 68

    (100) asignado -> comparators .

    PRINTLN         reduce using rule 100 (asignado -> comparators .)
    IF              reduce using rule 100 (asignado -> comparators .)
    FOR             reduce using rule 100 (asignado -> comparators .)
    WHILE           reduce using rule 100 (asignado -> comparators .)
    WHEN            reduce using rule 100 (asignado -> comparators .)
    VAL             reduce using rule 100 (asignado -> comparators .)
    VAR             reduce using rule 100 (asignado -> comparators .)
    VARIABLE        reduce using rule 100 (asignado -> comparators .)
    VINT            reduce using rule 100 (asignado -> comparators .)
    VFLOAT          reduce using rule 100 (asignado -> comparators .)
    STRING          reduce using rule 100 (asignado -> comparators .)
    $end            reduce using rule 100 (asignado -> comparators .)
    RKEY            reduce using rule 100 (asignado -> comparators .)
    RETURN          reduce using rule 100 (asignado -> comparators .)


state 69

    (101) asignado -> operado .
    (31) add -> operado . PLUS operado
    (32) subtract -> operado . MINUS operado
    (33) multiply -> operado . TIMES operado
    (34) divide -> operado . DIVIDE operado

    PRINTLN         reduce using rule 101 (asignado -> operado .)
    IF              reduce using rule 101 (asignado -> operado .)
    FOR             reduce using rule 101 (asignado -> operado .)
    WHILE           reduce using rule 101 (asignado -> operado .)
    WHEN            reduce using rule 101 (asignado -> operado .)
    VAL             reduce using rule 101 (asignado -> operado .)
    VAR             reduce using rule 101 (asignado -> operado .)
    VARIABLE        reduce using rule 101 (asignado -> operado .)
    VINT            reduce using rule 101 (asignado -> operado .)
    VFLOAT          reduce using rule 101 (asignado -> operado .)
    STRING          reduce using rule 101 (asignado -> operado .)
    $end            reduce using rule 101 (asignado -> operado .)
    RKEY            reduce using rule 101 (asignado -> operado .)
    RETURN          reduce using rule 101 (asignado -> operado .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 115


state 70

    (35) operado -> add .

    PLUS            reduce using rule 35 (operado -> add .)
    MINUS           reduce using rule 35 (operado -> add .)
    TIMES           reduce using rule 35 (operado -> add .)
    DIVIDE          reduce using rule 35 (operado -> add .)
    PRINTLN         reduce using rule 35 (operado -> add .)
    IF              reduce using rule 35 (operado -> add .)
    FOR             reduce using rule 35 (operado -> add .)
    WHILE           reduce using rule 35 (operado -> add .)
    WHEN            reduce using rule 35 (operado -> add .)
    VAL             reduce using rule 35 (operado -> add .)
    VAR             reduce using rule 35 (operado -> add .)
    VARIABLE        reduce using rule 35 (operado -> add .)
    VINT            reduce using rule 35 (operado -> add .)
    VFLOAT          reduce using rule 35 (operado -> add .)
    STRING          reduce using rule 35 (operado -> add .)
    $end            reduce using rule 35 (operado -> add .)
    RKEY            reduce using rule 35 (operado -> add .)
    RETURN          reduce using rule 35 (operado -> add .)
    RPAREN          reduce using rule 35 (operado -> add .)


state 71

    (36) operado -> subtract .

    PLUS            reduce using rule 36 (operado -> subtract .)
    MINUS           reduce using rule 36 (operado -> subtract .)
    TIMES           reduce using rule 36 (operado -> subtract .)
    DIVIDE          reduce using rule 36 (operado -> subtract .)
    PRINTLN         reduce using rule 36 (operado -> subtract .)
    IF              reduce using rule 36 (operado -> subtract .)
    FOR             reduce using rule 36 (operado -> subtract .)
    WHILE           reduce using rule 36 (operado -> subtract .)
    WHEN            reduce using rule 36 (operado -> subtract .)
    VAL             reduce using rule 36 (operado -> subtract .)
    VAR             reduce using rule 36 (operado -> subtract .)
    VARIABLE        reduce using rule 36 (operado -> subtract .)
    VINT            reduce using rule 36 (operado -> subtract .)
    VFLOAT          reduce using rule 36 (operado -> subtract .)
    STRING          reduce using rule 36 (operado -> subtract .)
    $end            reduce using rule 36 (operado -> subtract .)
    RKEY            reduce using rule 36 (operado -> subtract .)
    RETURN          reduce using rule 36 (operado -> subtract .)
    RPAREN          reduce using rule 36 (operado -> subtract .)


state 72

    (37) operado -> multiply .

    PLUS            reduce using rule 37 (operado -> multiply .)
    MINUS           reduce using rule 37 (operado -> multiply .)
    TIMES           reduce using rule 37 (operado -> multiply .)
    DIVIDE          reduce using rule 37 (operado -> multiply .)
    PRINTLN         reduce using rule 37 (operado -> multiply .)
    IF              reduce using rule 37 (operado -> multiply .)
    FOR             reduce using rule 37 (operado -> multiply .)
    WHILE           reduce using rule 37 (operado -> multiply .)
    WHEN            reduce using rule 37 (operado -> multiply .)
    VAL             reduce using rule 37 (operado -> multiply .)
    VAR             reduce using rule 37 (operado -> multiply .)
    VARIABLE        reduce using rule 37 (operado -> multiply .)
    VINT            reduce using rule 37 (operado -> multiply .)
    VFLOAT          reduce using rule 37 (operado -> multiply .)
    STRING          reduce using rule 37 (operado -> multiply .)
    $end            reduce using rule 37 (operado -> multiply .)
    RKEY            reduce using rule 37 (operado -> multiply .)
    RETURN          reduce using rule 37 (operado -> multiply .)
    RPAREN          reduce using rule 37 (operado -> multiply .)


state 73

    (38) operado -> divide .

    PLUS            reduce using rule 38 (operado -> divide .)
    MINUS           reduce using rule 38 (operado -> divide .)
    TIMES           reduce using rule 38 (operado -> divide .)
    DIVIDE          reduce using rule 38 (operado -> divide .)
    PRINTLN         reduce using rule 38 (operado -> divide .)
    IF              reduce using rule 38 (operado -> divide .)
    FOR             reduce using rule 38 (operado -> divide .)
    WHILE           reduce using rule 38 (operado -> divide .)
    WHEN            reduce using rule 38 (operado -> divide .)
    VAL             reduce using rule 38 (operado -> divide .)
    VAR             reduce using rule 38 (operado -> divide .)
    VARIABLE        reduce using rule 38 (operado -> divide .)
    VINT            reduce using rule 38 (operado -> divide .)
    VFLOAT          reduce using rule 38 (operado -> divide .)
    STRING          reduce using rule 38 (operado -> divide .)
    $end            reduce using rule 38 (operado -> divide .)
    RKEY            reduce using rule 38 (operado -> divide .)
    RETURN          reduce using rule 38 (operado -> divide .)
    RPAREN          reduce using rule 38 (operado -> divide .)


state 74

    (39) operado -> dato .
    (48) compareType -> dato . IGUAL IGUAL dato
    (54) compareGreaterthan -> dato . MAYOR dato
    (55) compareSmallerthan -> dato . MINOR dato
    (49) compareNotEqual -> dato . NOT IGUAL dato

    PLUS            reduce using rule 39 (operado -> dato .)
    MINUS           reduce using rule 39 (operado -> dato .)
    TIMES           reduce using rule 39 (operado -> dato .)
    DIVIDE          reduce using rule 39 (operado -> dato .)
    PRINTLN         reduce using rule 39 (operado -> dato .)
    IF              reduce using rule 39 (operado -> dato .)
    FOR             reduce using rule 39 (operado -> dato .)
    WHILE           reduce using rule 39 (operado -> dato .)
    WHEN            reduce using rule 39 (operado -> dato .)
    VAL             reduce using rule 39 (operado -> dato .)
    VAR             reduce using rule 39 (operado -> dato .)
    VARIABLE        reduce using rule 39 (operado -> dato .)
    VINT            reduce using rule 39 (operado -> dato .)
    VFLOAT          reduce using rule 39 (operado -> dato .)
    STRING          reduce using rule 39 (operado -> dato .)
    $end            reduce using rule 39 (operado -> dato .)
    RKEY            reduce using rule 39 (operado -> dato .)
    RETURN          reduce using rule 39 (operado -> dato .)
    RPAREN          reduce using rule 39 (operado -> dato .)
    IGUAL           shift and go to state 61
    MAYOR           shift and go to state 62
    MINOR           shift and go to state 63
    NOT             shift and go to state 64


state 75

    (96) plusasigna -> VARIABLE PLUS IGUAL . asignado
    (100) asignado -> . comparators
    (101) asignado -> . operado
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    asignado                       shift and go to state 116
    comparators                    shift and go to state 68
    operado                        shift and go to state 69
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    valor                          shift and go to state 20

state 76

    (97) minasigna -> VARIABLE MINUS IGUAL . asignado
    (100) asignado -> . comparators
    (101) asignado -> . operado
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    asignado                       shift and go to state 117
    comparators                    shift and go to state 68
    operado                        shift and go to state 69
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    valor                          shift and go to state 20

state 77

    (98) multasigna -> VARIABLE TIMES IGUAL . asignado
    (100) asignado -> . comparators
    (101) asignado -> . operado
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    asignado                       shift and go to state 118
    comparators                    shift and go to state 68
    operado                        shift and go to state 69
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    valor                          shift and go to state 20

state 78

    (99) divasigna -> VARIABLE DIVIDE IGUAL . asignado
    (100) asignado -> . comparators
    (101) asignado -> . operado
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    asignado                       shift and go to state 119
    comparators                    shift and go to state 68
    operado                        shift and go to state 69
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    valor                          shift and go to state 20

state 79

    (15) asignacion -> designacion VARIABLE DOUBLEPOINTS . tipo IGUAL valor
    (22) listAsignacion -> designacion VARIABLE DOUBLEPOINTS . LIST diamondType
    (40) mutListAsignacion -> designacion VARIABLE DOUBLEPOINTS . MUTABLELIST diamondType
    (18) tipo -> . TINT
    (19) tipo -> . TFLOAT
    (20) tipo -> . STRING

    LIST            shift and go to state 121
    MUTABLELIST     shift and go to state 122
    TINT            shift and go to state 123
    TFLOAT          shift and go to state 124
    STRING          shift and go to state 125

    tipo                           shift and go to state 120

state 80

    (47) inData -> designacion VARIABLE IGUAL . READLINE LPAREN RPAREN

    READLINE        shift and go to state 126


state 81

    (44) pairAsignation -> designacion LPAREN VARIABLE . COMA VARIABLE RPAREN

    COMA            shift and go to state 127


state 82

    (56) impresion -> PRINTLN LPAREN datoretornado . RPAREN

    RPAREN          shift and go to state 128


state 83

    (57) datoretornado -> operado .
    (31) add -> operado . PLUS operado
    (32) subtract -> operado . MINUS operado
    (33) multiply -> operado . TIMES operado
    (34) divide -> operado . DIVIDE operado

    RPAREN          reduce using rule 57 (datoretornado -> operado .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 115


state 84

    (58) datoretornado -> booly .
    (64) logic -> booly . logicoperador booly
    (66) logicoperador -> . AND
    (67) logicoperador -> . OR

    RPAREN          reduce using rule 58 (datoretornado -> booly .)
    AND             shift and go to state 130
    OR              shift and go to state 131

    logicoperador                  shift and go to state 129

state 85

    (60) booly -> comparators .

    AND             reduce using rule 60 (booly -> comparators .)
    OR              reduce using rule 60 (booly -> comparators .)
    RPAREN          reduce using rule 60 (booly -> comparators .)


state 86

    (61) booly -> logic .

    AND             reduce using rule 61 (booly -> logic .)
    OR              reduce using rule 61 (booly -> logic .)
    RPAREN          reduce using rule 61 (booly -> logic .)


state 87

    (62) booly -> TRUE .

    AND             reduce using rule 62 (booly -> TRUE .)
    OR              reduce using rule 62 (booly -> TRUE .)
    RPAREN          reduce using rule 62 (booly -> TRUE .)


state 88

    (63) booly -> FALSE .

    AND             reduce using rule 63 (booly -> FALSE .)
    OR              reduce using rule 63 (booly -> FALSE .)
    RPAREN          reduce using rule 63 (booly -> FALSE .)


state 89

    (65) logic -> NOT . booly
    (60) booly -> . comparators
    (61) booly -> . logic
    (62) booly -> . TRUE
    (63) booly -> . FALSE
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (64) logic -> . booly logicoperador booly
    (65) logic -> . NOT booly
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    TRUE            shift and go to state 87
    FALSE           shift and go to state 88
    NOT             shift and go to state 89
    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    booly                          shift and go to state 132
    comparators                    shift and go to state 85
    logic                          shift and go to state 86
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    dato                           shift and go to state 40
    valor                          shift and go to state 20

state 90

    (30) list -> listAsignacion IGUAL listOf .

    PRINTLN         reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    IF              reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    FOR             reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    WHILE           reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    WHEN            reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    VAL             reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    VAR             reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    VARIABLE        reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    VINT            reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    VFLOAT          reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    STRING          reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    $end            reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    RKEY            reduce using rule 30 (list -> listAsignacion IGUAL listOf .)
    RETURN          reduce using rule 30 (list -> listAsignacion IGUAL listOf .)


state 91

    (24) listOf -> LISTOF . LPAREN elementos RPAREN

    LPAREN          shift and go to state 133


state 92

    (43) mutableList -> mutListAsignacion IGUAL mutableListOf .

    PRINTLN         reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    IF              reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    FOR             reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    WHILE           reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    WHEN            reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    VAL             reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    VAR             reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    VARIABLE        reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    VINT            reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    VFLOAT          reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    STRING          reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    $end            reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    RKEY            reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)
    RETURN          reduce using rule 43 (mutableList -> mutListAsignacion IGUAL mutableListOf .)


state 93

    (42) mutableListOf -> MUTABLELISTOF . LPAREN elementos RPAREN

    LPAREN          shift and go to state 134


state 94

    (46) pair -> pairAsignation IGUAL pairBody .

    PRINTLN         reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    IF              reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    FOR             reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    WHILE           reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    WHEN            reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    VAL             reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    VAR             reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    VARIABLE        reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    VINT            reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    VFLOAT          reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    STRING          reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    $end            reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    RKEY            reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)
    RETURN          reduce using rule 46 (pair -> pairAsignation IGUAL pairBody .)


state 95

    (45) pairBody -> PAIR . LPAREN valor COMA valor RPAREN

    LPAREN          shift and go to state 135


state 96

    (68) if -> IF LPAREN condicion . RPAREN LKEY instrucciones RKEY
    (69) if -> IF LPAREN condicion . RPAREN LKEY instrucciones RKEY else
    (70) if -> IF LPAREN condicion . RPAREN LKEY instrucciones RKEY elseif else

    RPAREN          shift and go to state 136


state 97

    (59) condicion -> booly .
    (64) logic -> booly . logicoperador booly
    (66) logicoperador -> . AND
    (67) logicoperador -> . OR

    RPAREN          reduce using rule 59 (condicion -> booly .)
    AND             shift and go to state 130
    OR              shift and go to state 131

    logicoperador                  shift and go to state 129

state 98

    (77) for -> FOR LPAREN condicionFor . RPAREN LKEY instrucciones RKEY

    RPAREN          shift and go to state 137


state 99

    (73) condicionFor -> condicionRango .

    RPAREN          reduce using rule 73 (condicionFor -> condicionRango .)


state 100

    (74) condicionFor -> condicionBloque .

    RPAREN          reduce using rule 74 (condicionFor -> condicionBloque .)


state 101

    (75) condicionRango -> VARIABLE . IN VINT DOT DOT VINT
    (76) condicionBloque -> VARIABLE . IN LISTOF

    IN              shift and go to state 138


state 102

    (78) while -> WHILE LPAREN condicion . RPAREN LKEY instrucciones RKEY

    RPAREN          shift and go to state 139


state 103

    (79) when -> WHEN LPAREN VARIABLE . RPAREN LKEY instrucciones RKEY

    RPAREN          shift and go to state 140


state 104

    (48) compareType -> dato IGUAL IGUAL . dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    dato                           shift and go to state 141
    valor                          shift and go to state 20

state 105

    (54) compareGreaterthan -> dato MAYOR dato .

    PRINTLN         reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    IF              reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    FOR             reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    WHILE           reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    WHEN            reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    VAL             reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    VAR             reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    VARIABLE        reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    VINT            reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    VFLOAT          reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    STRING          reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    $end            reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    RKEY            reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    RETURN          reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    AND             reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    OR              reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)
    RPAREN          reduce using rule 54 (compareGreaterthan -> dato MAYOR dato .)


state 106

    (55) compareSmallerthan -> dato MINOR dato .

    PRINTLN         reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    IF              reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    FOR             reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    WHILE           reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    WHEN            reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    VAL             reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    VAR             reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    VARIABLE        reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    VINT            reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    VFLOAT          reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    STRING          reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    $end            reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    RKEY            reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    RETURN          reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    AND             reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    OR              reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)
    RPAREN          reduce using rule 55 (compareSmallerthan -> dato MINOR dato .)


state 107

    (49) compareNotEqual -> dato NOT IGUAL . dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    dato                           shift and go to state 142
    valor                          shift and go to state 20

state 108

    (86) parametro -> VARIABLE . DOUBLEPOINTS tipo

    DOUBLEPOINTS    shift and go to state 143


state 109

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros . RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros . RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY

    RPAREN          shift and go to state 144


state 110

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN . DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (82) implementa_funcion -> FUN VARIABLE LPAREN RPAREN . DOUBLEPOINTS VOID LKEY instrucciones RKEY

    DOUBLEPOINTS    shift and go to state 145


state 111

    (84) listaparametros -> parametro .
    (85) listaparametros -> parametro . COMA listaparametros

    RPAREN          reduce using rule 84 (listaparametros -> parametro .)
    COMA            shift and go to state 146


state 112

    (31) add -> operado PLUS . operado
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    operado                        shift and go to state 147
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 148
    valor                          shift and go to state 20

state 113

    (32) subtract -> operado MINUS . operado
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    operado                        shift and go to state 149
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 148
    valor                          shift and go to state 20

state 114

    (33) multiply -> operado TIMES . operado
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    operado                        shift and go to state 150
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 148
    valor                          shift and go to state 20

state 115

    (34) divide -> operado DIVIDE . operado
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    operado                        shift and go to state 151
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 148
    valor                          shift and go to state 20

state 116

    (96) plusasigna -> VARIABLE PLUS IGUAL asignado .

    PRINTLN         reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    IF              reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    FOR             reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    WHILE           reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    WHEN            reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    VAL             reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    VAR             reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    VARIABLE        reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    VINT            reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    VFLOAT          reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    STRING          reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    $end            reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    RKEY            reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)
    RETURN          reduce using rule 96 (plusasigna -> VARIABLE PLUS IGUAL asignado .)


state 117

    (97) minasigna -> VARIABLE MINUS IGUAL asignado .

    PRINTLN         reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    IF              reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    FOR             reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    WHILE           reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    WHEN            reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    VAL             reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    VAR             reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    VARIABLE        reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    VINT            reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    VFLOAT          reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    STRING          reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    $end            reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    RKEY            reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)
    RETURN          reduce using rule 97 (minasigna -> VARIABLE MINUS IGUAL asignado .)


state 118

    (98) multasigna -> VARIABLE TIMES IGUAL asignado .

    PRINTLN         reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    IF              reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    FOR             reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    WHILE           reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    WHEN            reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    VAL             reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    VAR             reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    VARIABLE        reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    VINT            reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    VFLOAT          reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    STRING          reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    $end            reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    RKEY            reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)
    RETURN          reduce using rule 98 (multasigna -> VARIABLE TIMES IGUAL asignado .)


state 119

    (99) divasigna -> VARIABLE DIVIDE IGUAL asignado .

    PRINTLN         reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    IF              reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    FOR             reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    WHILE           reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    WHEN            reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    VAL             reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    VAR             reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    VARIABLE        reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    VINT            reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    VFLOAT          reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    STRING          reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    $end            reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    RKEY            reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)
    RETURN          reduce using rule 99 (divasigna -> VARIABLE DIVIDE IGUAL asignado .)


state 120

    (15) asignacion -> designacion VARIABLE DOUBLEPOINTS tipo . IGUAL valor

    IGUAL           shift and go to state 152


state 121

    (22) listAsignacion -> designacion VARIABLE DOUBLEPOINTS LIST . diamondType
    (21) diamondType -> . MINOR tipo MAYOR

    MINOR           shift and go to state 154

    diamondType                    shift and go to state 153

state 122

    (40) mutListAsignacion -> designacion VARIABLE DOUBLEPOINTS MUTABLELIST . diamondType
    (21) diamondType -> . MINOR tipo MAYOR

    MINOR           shift and go to state 154

    diamondType                    shift and go to state 155

state 123

    (18) tipo -> TINT .

    IGUAL           reduce using rule 18 (tipo -> TINT .)
    COMA            reduce using rule 18 (tipo -> TINT .)
    RPAREN          reduce using rule 18 (tipo -> TINT .)
    LKEY            reduce using rule 18 (tipo -> TINT .)
    MAYOR           reduce using rule 18 (tipo -> TINT .)


state 124

    (19) tipo -> TFLOAT .

    IGUAL           reduce using rule 19 (tipo -> TFLOAT .)
    COMA            reduce using rule 19 (tipo -> TFLOAT .)
    RPAREN          reduce using rule 19 (tipo -> TFLOAT .)
    LKEY            reduce using rule 19 (tipo -> TFLOAT .)
    MAYOR           reduce using rule 19 (tipo -> TFLOAT .)


state 125

    (20) tipo -> STRING .

    IGUAL           reduce using rule 20 (tipo -> STRING .)
    COMA            reduce using rule 20 (tipo -> STRING .)
    RPAREN          reduce using rule 20 (tipo -> STRING .)
    LKEY            reduce using rule 20 (tipo -> STRING .)
    MAYOR           reduce using rule 20 (tipo -> STRING .)


state 126

    (47) inData -> designacion VARIABLE IGUAL READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 156


state 127

    (44) pairAsignation -> designacion LPAREN VARIABLE COMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 157


state 128

    (56) impresion -> PRINTLN LPAREN datoretornado RPAREN .

    PRINTLN         reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    IF              reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    FOR             reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    WHILE           reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    WHEN            reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    VAL             reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    VAR             reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    VARIABLE        reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    VINT            reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    VFLOAT          reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    STRING          reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    $end            reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    RKEY            reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)
    RETURN          reduce using rule 56 (impresion -> PRINTLN LPAREN datoretornado RPAREN .)


state 129

    (64) logic -> booly logicoperador . booly
    (60) booly -> . comparators
    (61) booly -> . logic
    (62) booly -> . TRUE
    (63) booly -> . FALSE
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (64) logic -> . booly logicoperador booly
    (65) logic -> . NOT booly
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    TRUE            shift and go to state 87
    FALSE           shift and go to state 88
    NOT             shift and go to state 89
    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    booly                          shift and go to state 158
    comparators                    shift and go to state 85
    logic                          shift and go to state 86
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    dato                           shift and go to state 40
    valor                          shift and go to state 20

state 130

    (66) logicoperador -> AND .

    TRUE            reduce using rule 66 (logicoperador -> AND .)
    FALSE           reduce using rule 66 (logicoperador -> AND .)
    NOT             reduce using rule 66 (logicoperador -> AND .)
    VARIABLE        reduce using rule 66 (logicoperador -> AND .)
    VINT            reduce using rule 66 (logicoperador -> AND .)
    VFLOAT          reduce using rule 66 (logicoperador -> AND .)
    STRING          reduce using rule 66 (logicoperador -> AND .)


state 131

    (67) logicoperador -> OR .

    TRUE            reduce using rule 67 (logicoperador -> OR .)
    FALSE           reduce using rule 67 (logicoperador -> OR .)
    NOT             reduce using rule 67 (logicoperador -> OR .)
    VARIABLE        reduce using rule 67 (logicoperador -> OR .)
    VINT            reduce using rule 67 (logicoperador -> OR .)
    VFLOAT          reduce using rule 67 (logicoperador -> OR .)
    STRING          reduce using rule 67 (logicoperador -> OR .)


state 132

    (65) logic -> NOT booly .
    (64) logic -> booly . logicoperador booly
    (66) logicoperador -> . AND
    (67) logicoperador -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 65 (logic -> NOT booly .)
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! AND             [ reduce using rule 65 (logic -> NOT booly .) ]
  ! OR              [ reduce using rule 65 (logic -> NOT booly .) ]

    logicoperador                  shift and go to state 129

state 133

    (24) listOf -> LISTOF LPAREN . elementos RPAREN
    (25) elementos -> . elementos COMA valor
    (26) elementos -> . valor
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    elementos                      shift and go to state 159
    valor                          shift and go to state 160

state 134

    (42) mutableListOf -> MUTABLELISTOF LPAREN . elementos RPAREN
    (25) elementos -> . elementos COMA valor
    (26) elementos -> . valor
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    elementos                      shift and go to state 161
    valor                          shift and go to state 160

state 135

    (45) pairBody -> PAIR LPAREN . valor COMA valor RPAREN
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    valor                          shift and go to state 162

state 136

    (68) if -> IF LPAREN condicion RPAREN . LKEY instrucciones RKEY
    (69) if -> IF LPAREN condicion RPAREN . LKEY instrucciones RKEY else
    (70) if -> IF LPAREN condicion RPAREN . LKEY instrucciones RKEY elseif else

    LKEY            shift and go to state 163


state 137

    (77) for -> FOR LPAREN condicionFor RPAREN . LKEY instrucciones RKEY

    LKEY            shift and go to state 164


state 138

    (75) condicionRango -> VARIABLE IN . VINT DOT DOT VINT
    (76) condicionBloque -> VARIABLE IN . LISTOF

    VINT            shift and go to state 165
    LISTOF          shift and go to state 166


state 139

    (78) while -> WHILE LPAREN condicion RPAREN . LKEY instrucciones RKEY

    LKEY            shift and go to state 167


state 140

    (79) when -> WHEN LPAREN VARIABLE RPAREN . LKEY instrucciones RKEY

    LKEY            shift and go to state 168


state 141

    (48) compareType -> dato IGUAL IGUAL dato .

    PRINTLN         reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    IF              reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    FOR             reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    WHILE           reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    WHEN            reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    VAL             reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    VAR             reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    VARIABLE        reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    VINT            reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    VFLOAT          reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    STRING          reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    $end            reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    RKEY            reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    RETURN          reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    AND             reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    OR              reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)
    RPAREN          reduce using rule 48 (compareType -> dato IGUAL IGUAL dato .)


state 142

    (49) compareNotEqual -> dato NOT IGUAL dato .

    PRINTLN         reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    IF              reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    FOR             reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    WHILE           reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    WHEN            reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    VAL             reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    VAR             reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    VARIABLE        reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    VINT            reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    VFLOAT          reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    STRING          reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    $end            reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    RKEY            reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    RETURN          reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    AND             reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    OR              reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)
    RPAREN          reduce using rule 49 (compareNotEqual -> dato NOT IGUAL dato .)


state 143

    (86) parametro -> VARIABLE DOUBLEPOINTS . tipo
    (18) tipo -> . TINT
    (19) tipo -> . TFLOAT
    (20) tipo -> . STRING

    TINT            shift and go to state 123
    TFLOAT          shift and go to state 124
    STRING          shift and go to state 125

    tipo                           shift and go to state 169

state 144

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN . DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY
    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN . DOUBLEPOINTS VOID LKEY instrucciones RKEY

    DOUBLEPOINTS    shift and go to state 170


state 145

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS . tipo LKEY instrucciones retorno RKEY
    (82) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS . VOID LKEY instrucciones RKEY
    (18) tipo -> . TINT
    (19) tipo -> . TFLOAT
    (20) tipo -> . STRING

    VOID            shift and go to state 172
    TINT            shift and go to state 123
    TFLOAT          shift and go to state 124
    STRING          shift and go to state 125

    tipo                           shift and go to state 171

state 146

    (85) listaparametros -> parametro COMA . listaparametros
    (84) listaparametros -> . parametro
    (85) listaparametros -> . parametro COMA listaparametros
    (86) parametro -> . VARIABLE DOUBLEPOINTS tipo

    VARIABLE        shift and go to state 108

    parametro                      shift and go to state 111
    listaparametros                shift and go to state 173

state 147

    (31) add -> operado PLUS operado .
    (31) add -> operado . PLUS operado
    (32) subtract -> operado . MINUS operado
    (33) multiply -> operado . TIMES operado
    (34) divide -> operado . DIVIDE operado

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PRINTLN         reduce using rule 31 (add -> operado PLUS operado .)
    IF              reduce using rule 31 (add -> operado PLUS operado .)
    FOR             reduce using rule 31 (add -> operado PLUS operado .)
    WHILE           reduce using rule 31 (add -> operado PLUS operado .)
    WHEN            reduce using rule 31 (add -> operado PLUS operado .)
    VAL             reduce using rule 31 (add -> operado PLUS operado .)
    VAR             reduce using rule 31 (add -> operado PLUS operado .)
    VARIABLE        reduce using rule 31 (add -> operado PLUS operado .)
    VINT            reduce using rule 31 (add -> operado PLUS operado .)
    VFLOAT          reduce using rule 31 (add -> operado PLUS operado .)
    STRING          reduce using rule 31 (add -> operado PLUS operado .)
    $end            reduce using rule 31 (add -> operado PLUS operado .)
    RKEY            reduce using rule 31 (add -> operado PLUS operado .)
    RETURN          reduce using rule 31 (add -> operado PLUS operado .)
    RPAREN          reduce using rule 31 (add -> operado PLUS operado .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 115

  ! PLUS            [ reduce using rule 31 (add -> operado PLUS operado .) ]
  ! MINUS           [ reduce using rule 31 (add -> operado PLUS operado .) ]
  ! TIMES           [ reduce using rule 31 (add -> operado PLUS operado .) ]
  ! DIVIDE          [ reduce using rule 31 (add -> operado PLUS operado .) ]


state 148

    (39) operado -> dato .

    PLUS            reduce using rule 39 (operado -> dato .)
    MINUS           reduce using rule 39 (operado -> dato .)
    TIMES           reduce using rule 39 (operado -> dato .)
    DIVIDE          reduce using rule 39 (operado -> dato .)
    PRINTLN         reduce using rule 39 (operado -> dato .)
    IF              reduce using rule 39 (operado -> dato .)
    FOR             reduce using rule 39 (operado -> dato .)
    WHILE           reduce using rule 39 (operado -> dato .)
    WHEN            reduce using rule 39 (operado -> dato .)
    VAL             reduce using rule 39 (operado -> dato .)
    VAR             reduce using rule 39 (operado -> dato .)
    VARIABLE        reduce using rule 39 (operado -> dato .)
    VINT            reduce using rule 39 (operado -> dato .)
    VFLOAT          reduce using rule 39 (operado -> dato .)
    STRING          reduce using rule 39 (operado -> dato .)
    $end            reduce using rule 39 (operado -> dato .)
    RKEY            reduce using rule 39 (operado -> dato .)
    RETURN          reduce using rule 39 (operado -> dato .)
    RPAREN          reduce using rule 39 (operado -> dato .)


state 149

    (32) subtract -> operado MINUS operado .
    (31) add -> operado . PLUS operado
    (32) subtract -> operado . MINUS operado
    (33) multiply -> operado . TIMES operado
    (34) divide -> operado . DIVIDE operado

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PRINTLN         reduce using rule 32 (subtract -> operado MINUS operado .)
    IF              reduce using rule 32 (subtract -> operado MINUS operado .)
    FOR             reduce using rule 32 (subtract -> operado MINUS operado .)
    WHILE           reduce using rule 32 (subtract -> operado MINUS operado .)
    WHEN            reduce using rule 32 (subtract -> operado MINUS operado .)
    VAL             reduce using rule 32 (subtract -> operado MINUS operado .)
    VAR             reduce using rule 32 (subtract -> operado MINUS operado .)
    VARIABLE        reduce using rule 32 (subtract -> operado MINUS operado .)
    VINT            reduce using rule 32 (subtract -> operado MINUS operado .)
    VFLOAT          reduce using rule 32 (subtract -> operado MINUS operado .)
    STRING          reduce using rule 32 (subtract -> operado MINUS operado .)
    $end            reduce using rule 32 (subtract -> operado MINUS operado .)
    RKEY            reduce using rule 32 (subtract -> operado MINUS operado .)
    RETURN          reduce using rule 32 (subtract -> operado MINUS operado .)
    RPAREN          reduce using rule 32 (subtract -> operado MINUS operado .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 115

  ! PLUS            [ reduce using rule 32 (subtract -> operado MINUS operado .) ]
  ! MINUS           [ reduce using rule 32 (subtract -> operado MINUS operado .) ]
  ! TIMES           [ reduce using rule 32 (subtract -> operado MINUS operado .) ]
  ! DIVIDE          [ reduce using rule 32 (subtract -> operado MINUS operado .) ]


state 150

    (33) multiply -> operado TIMES operado .
    (31) add -> operado . PLUS operado
    (32) subtract -> operado . MINUS operado
    (33) multiply -> operado . TIMES operado
    (34) divide -> operado . DIVIDE operado

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PRINTLN         reduce using rule 33 (multiply -> operado TIMES operado .)
    IF              reduce using rule 33 (multiply -> operado TIMES operado .)
    FOR             reduce using rule 33 (multiply -> operado TIMES operado .)
    WHILE           reduce using rule 33 (multiply -> operado TIMES operado .)
    WHEN            reduce using rule 33 (multiply -> operado TIMES operado .)
    VAL             reduce using rule 33 (multiply -> operado TIMES operado .)
    VAR             reduce using rule 33 (multiply -> operado TIMES operado .)
    VARIABLE        reduce using rule 33 (multiply -> operado TIMES operado .)
    VINT            reduce using rule 33 (multiply -> operado TIMES operado .)
    VFLOAT          reduce using rule 33 (multiply -> operado TIMES operado .)
    STRING          reduce using rule 33 (multiply -> operado TIMES operado .)
    $end            reduce using rule 33 (multiply -> operado TIMES operado .)
    RKEY            reduce using rule 33 (multiply -> operado TIMES operado .)
    RETURN          reduce using rule 33 (multiply -> operado TIMES operado .)
    RPAREN          reduce using rule 33 (multiply -> operado TIMES operado .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 115

  ! PLUS            [ reduce using rule 33 (multiply -> operado TIMES operado .) ]
  ! MINUS           [ reduce using rule 33 (multiply -> operado TIMES operado .) ]
  ! TIMES           [ reduce using rule 33 (multiply -> operado TIMES operado .) ]
  ! DIVIDE          [ reduce using rule 33 (multiply -> operado TIMES operado .) ]


state 151

    (34) divide -> operado DIVIDE operado .
    (31) add -> operado . PLUS operado
    (32) subtract -> operado . MINUS operado
    (33) multiply -> operado . TIMES operado
    (34) divide -> operado . DIVIDE operado

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PRINTLN         reduce using rule 34 (divide -> operado DIVIDE operado .)
    IF              reduce using rule 34 (divide -> operado DIVIDE operado .)
    FOR             reduce using rule 34 (divide -> operado DIVIDE operado .)
    WHILE           reduce using rule 34 (divide -> operado DIVIDE operado .)
    WHEN            reduce using rule 34 (divide -> operado DIVIDE operado .)
    VAL             reduce using rule 34 (divide -> operado DIVIDE operado .)
    VAR             reduce using rule 34 (divide -> operado DIVIDE operado .)
    VARIABLE        reduce using rule 34 (divide -> operado DIVIDE operado .)
    VINT            reduce using rule 34 (divide -> operado DIVIDE operado .)
    VFLOAT          reduce using rule 34 (divide -> operado DIVIDE operado .)
    STRING          reduce using rule 34 (divide -> operado DIVIDE operado .)
    $end            reduce using rule 34 (divide -> operado DIVIDE operado .)
    RKEY            reduce using rule 34 (divide -> operado DIVIDE operado .)
    RETURN          reduce using rule 34 (divide -> operado DIVIDE operado .)
    RPAREN          reduce using rule 34 (divide -> operado DIVIDE operado .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    TIMES           shift and go to state 114
    DIVIDE          shift and go to state 115

  ! PLUS            [ reduce using rule 34 (divide -> operado DIVIDE operado .) ]
  ! MINUS           [ reduce using rule 34 (divide -> operado DIVIDE operado .) ]
  ! TIMES           [ reduce using rule 34 (divide -> operado DIVIDE operado .) ]
  ! DIVIDE          [ reduce using rule 34 (divide -> operado DIVIDE operado .) ]


state 152

    (15) asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL . valor
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    valor                          shift and go to state 174

state 153

    (22) listAsignacion -> designacion VARIABLE DOUBLEPOINTS LIST diamondType .

    IGUAL           reduce using rule 22 (listAsignacion -> designacion VARIABLE DOUBLEPOINTS LIST diamondType .)


state 154

    (21) diamondType -> MINOR . tipo MAYOR
    (18) tipo -> . TINT
    (19) tipo -> . TFLOAT
    (20) tipo -> . STRING

    TINT            shift and go to state 123
    TFLOAT          shift and go to state 124
    STRING          shift and go to state 125

    tipo                           shift and go to state 175

state 155

    (40) mutListAsignacion -> designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType .

    IGUAL           reduce using rule 40 (mutListAsignacion -> designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType .)


state 156

    (47) inData -> designacion VARIABLE IGUAL READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 176


state 157

    (44) pairAsignation -> designacion LPAREN VARIABLE COMA VARIABLE . RPAREN

    RPAREN          shift and go to state 177


state 158

    (64) logic -> booly logicoperador booly .
    (64) logic -> booly . logicoperador booly
    (66) logicoperador -> . AND
    (67) logicoperador -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 64 (logic -> booly logicoperador booly .)
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! AND             [ reduce using rule 64 (logic -> booly logicoperador booly .) ]
  ! OR              [ reduce using rule 64 (logic -> booly logicoperador booly .) ]

    logicoperador                  shift and go to state 129

state 159

    (24) listOf -> LISTOF LPAREN elementos . RPAREN
    (25) elementos -> elementos . COMA valor

    RPAREN          shift and go to state 178
    COMA            shift and go to state 179


state 160

    (26) elementos -> valor .

    RPAREN          reduce using rule 26 (elementos -> valor .)
    COMA            reduce using rule 26 (elementos -> valor .)


state 161

    (42) mutableListOf -> MUTABLELISTOF LPAREN elementos . RPAREN
    (25) elementos -> elementos . COMA valor

    RPAREN          shift and go to state 180
    COMA            shift and go to state 179


state 162

    (45) pairBody -> PAIR LPAREN valor . COMA valor RPAREN

    COMA            shift and go to state 181


state 163

    (68) if -> IF LPAREN condicion RPAREN LKEY . instrucciones RKEY
    (69) if -> IF LPAREN condicion RPAREN LKEY . instrucciones RKEY else
    (70) if -> IF LPAREN condicion RPAREN LKEY . instrucciones RKEY elseif else
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 182
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 164

    (77) for -> FOR LPAREN condicionFor RPAREN LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 183
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 165

    (75) condicionRango -> VARIABLE IN VINT . DOT DOT VINT

    DOT             shift and go to state 184


state 166

    (76) condicionBloque -> VARIABLE IN LISTOF .

    RPAREN          reduce using rule 76 (condicionBloque -> VARIABLE IN LISTOF .)


state 167

    (78) while -> WHILE LPAREN condicion RPAREN LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 185
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 168

    (79) when -> WHEN LPAREN VARIABLE RPAREN LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 186
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 169

    (86) parametro -> VARIABLE DOUBLEPOINTS tipo .

    COMA            reduce using rule 86 (parametro -> VARIABLE DOUBLEPOINTS tipo .)
    RPAREN          reduce using rule 86 (parametro -> VARIABLE DOUBLEPOINTS tipo .)


state 170

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS . tipo LKEY instrucciones retorno RKEY
    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS . VOID LKEY instrucciones RKEY
    (18) tipo -> . TINT
    (19) tipo -> . TFLOAT
    (20) tipo -> . STRING

    VOID            shift and go to state 188
    TINT            shift and go to state 123
    TFLOAT          shift and go to state 124
    STRING          shift and go to state 125

    tipo                           shift and go to state 187

state 171

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo . LKEY instrucciones retorno RKEY

    LKEY            shift and go to state 189


state 172

    (82) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID . LKEY instrucciones RKEY

    LKEY            shift and go to state 190


state 173

    (85) listaparametros -> parametro COMA listaparametros .

    RPAREN          reduce using rule 85 (listaparametros -> parametro COMA listaparametros .)


state 174

    (15) asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .

    PRINTLN         reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    IF              reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    FOR             reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    WHILE           reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    WHEN            reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    VAL             reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    VAR             reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    VARIABLE        reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    VINT            reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    VFLOAT          reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    STRING          reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    $end            reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    RKEY            reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)
    RETURN          reduce using rule 15 (asignacion -> designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor .)


state 175

    (21) diamondType -> MINOR tipo . MAYOR

    MAYOR           shift and go to state 191


state 176

    (47) inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .

    PRINTLN         reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    IF              reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    FOR             reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    WHILE           reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    WHEN            reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    VAL             reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    VAR             reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    VARIABLE        reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    VINT            reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    VFLOAT          reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    STRING          reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    $end            reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    RKEY            reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)
    RETURN          reduce using rule 47 (inData -> designacion VARIABLE IGUAL READLINE LPAREN RPAREN .)


state 177

    (44) pairAsignation -> designacion LPAREN VARIABLE COMA VARIABLE RPAREN .

    IGUAL           reduce using rule 44 (pairAsignation -> designacion LPAREN VARIABLE COMA VARIABLE RPAREN .)


state 178

    (24) listOf -> LISTOF LPAREN elementos RPAREN .

    PRINTLN         reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    IF              reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    FOR             reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    WHILE           reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    WHEN            reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    VAL             reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    VAR             reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    VARIABLE        reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    VINT            reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    VFLOAT          reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    STRING          reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    $end            reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    RKEY            reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)
    RETURN          reduce using rule 24 (listOf -> LISTOF LPAREN elementos RPAREN .)


state 179

    (25) elementos -> elementos COMA . valor
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    valor                          shift and go to state 192

state 180

    (42) mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .

    PRINTLN         reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    IF              reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    FOR             reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    WHILE           reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    WHEN            reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    VAL             reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    VAR             reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    VARIABLE        reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    VINT            reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    VFLOAT          reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    STRING          reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    $end            reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    RKEY            reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)
    RETURN          reduce using rule 42 (mutableListOf -> MUTABLELISTOF LPAREN elementos RPAREN .)


state 181

    (45) pairBody -> PAIR LPAREN valor COMA . valor RPAREN
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    valor                          shift and go to state 193

state 182

    (68) if -> IF LPAREN condicion RPAREN LKEY instrucciones . RKEY
    (69) if -> IF LPAREN condicion RPAREN LKEY instrucciones . RKEY else
    (70) if -> IF LPAREN condicion RPAREN LKEY instrucciones . RKEY elseif else

    RKEY            shift and go to state 194


state 183

    (77) for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones . RKEY

    RKEY            shift and go to state 195


state 184

    (75) condicionRango -> VARIABLE IN VINT DOT . DOT VINT

    DOT             shift and go to state 196


state 185

    (78) while -> WHILE LPAREN condicion RPAREN LKEY instrucciones . RKEY

    RKEY            shift and go to state 197


state 186

    (79) when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones . RKEY

    RKEY            shift and go to state 198


state 187

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo . LKEY instrucciones retorno RKEY

    LKEY            shift and go to state 199


state 188

    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID . LKEY instrucciones RKEY

    LKEY            shift and go to state 200


state 189

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY . instrucciones retorno RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 201
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 190

    (82) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 202
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 191

    (21) diamondType -> MINOR tipo MAYOR .

    IGUAL           reduce using rule 21 (diamondType -> MINOR tipo MAYOR .)


state 192

    (25) elementos -> elementos COMA valor .

    RPAREN          reduce using rule 25 (elementos -> elementos COMA valor .)
    COMA            reduce using rule 25 (elementos -> elementos COMA valor .)


state 193

    (45) pairBody -> PAIR LPAREN valor COMA valor . RPAREN

    RPAREN          shift and go to state 203


state 194

    (68) if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .
    (69) if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY . else
    (70) if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY . elseif else
    (72) else -> . ELSE LKEY instrucciones RKEY
    (71) elseif -> . ELSE IF LPAREN condicion RPAREN LKEY instrucciones RKEY

    PRINTLN         reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    IF              reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    FOR             reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    WHILE           reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    WHEN            reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VAL             reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VAR             reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VARIABLE        reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VINT            reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VFLOAT          reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    STRING          reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    $end            reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    RKEY            reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    RETURN          reduce using rule 68 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    ELSE            shift and go to state 206

    else                           shift and go to state 204
    elseif                         shift and go to state 205

state 195

    (77) for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .

    PRINTLN         reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    IF              reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    FOR             reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    WHILE           reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    WHEN            reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    VAL             reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    VAR             reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    VARIABLE        reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    VINT            reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    VFLOAT          reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    STRING          reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    $end            reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    RKEY            reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)
    RETURN          reduce using rule 77 (for -> FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY .)


state 196

    (75) condicionRango -> VARIABLE IN VINT DOT DOT . VINT

    VINT            shift and go to state 207


state 197

    (78) while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .

    PRINTLN         reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    IF              reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    FOR             reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    WHILE           reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    WHEN            reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VAL             reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VAR             reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VARIABLE        reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VINT            reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    VFLOAT          reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    STRING          reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    $end            reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    RKEY            reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)
    RETURN          reduce using rule 78 (while -> WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY .)


state 198

    (79) when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .

    PRINTLN         reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    IF              reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    FOR             reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    WHILE           reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    WHEN            reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    VAL             reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    VAR             reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    VARIABLE        reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    VINT            reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    VFLOAT          reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    STRING          reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    $end            reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    RKEY            reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)
    RETURN          reduce using rule 79 (when -> WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY .)


state 199

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY . instrucciones retorno RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 208
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 200

    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 209
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 201

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones . retorno RKEY
    (87) retorno -> . RETURN asignado

    RETURN          shift and go to state 211

    retorno                        shift and go to state 210

state 202

    (82) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones . RKEY

    RKEY            shift and go to state 212


state 203

    (45) pairBody -> PAIR LPAREN valor COMA valor RPAREN .

    PRINTLN         reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    IF              reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    FOR             reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    WHILE           reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    WHEN            reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    VAL             reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    VAR             reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    VARIABLE        reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    VINT            reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    VFLOAT          reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    STRING          reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    $end            reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    RKEY            reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)
    RETURN          reduce using rule 45 (pairBody -> PAIR LPAREN valor COMA valor RPAREN .)


state 204

    (69) if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .

    PRINTLN         reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    IF              reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    FOR             reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    WHILE           reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    WHEN            reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    VAL             reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    VAR             reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    VARIABLE        reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    VINT            reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    VFLOAT          reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    STRING          reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    $end            reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    RKEY            reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)
    RETURN          reduce using rule 69 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY else .)


state 205

    (70) if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif . else
    (72) else -> . ELSE LKEY instrucciones RKEY

    ELSE            shift and go to state 214

    else                           shift and go to state 213

state 206

    (72) else -> ELSE . LKEY instrucciones RKEY
    (71) elseif -> ELSE . IF LPAREN condicion RPAREN LKEY instrucciones RKEY

    LKEY            shift and go to state 215
    IF              shift and go to state 216


state 207

    (75) condicionRango -> VARIABLE IN VINT DOT DOT VINT .

    RPAREN          reduce using rule 75 (condicionRango -> VARIABLE IN VINT DOT DOT VINT .)


state 208

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones . retorno RKEY
    (87) retorno -> . RETURN asignado

    RETURN          shift and go to state 211

    retorno                        shift and go to state 217

state 209

    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones . RKEY

    RKEY            shift and go to state 218


state 210

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno . RKEY

    RKEY            shift and go to state 219


state 211

    (87) retorno -> RETURN . asignado
    (100) asignado -> . comparators
    (101) asignado -> . operado
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (35) operado -> . add
    (36) operado -> . subtract
    (37) operado -> . multiply
    (38) operado -> . divide
    (39) operado -> . dato
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (31) add -> . operado PLUS operado
    (32) subtract -> . operado MINUS operado
    (33) multiply -> . operado TIMES operado
    (34) divide -> . operado DIVIDE operado
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    asignado                       shift and go to state 220
    comparators                    shift and go to state 68
    operado                        shift and go to state 69
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    add                            shift and go to state 70
    subtract                       shift and go to state 71
    multiply                       shift and go to state 72
    divide                         shift and go to state 73
    dato                           shift and go to state 74
    valor                          shift and go to state 20

state 212

    (82) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY .

    $end            reduce using rule 82 (implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY .)


state 213

    (70) if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .

    PRINTLN         reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    IF              reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    FOR             reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    WHILE           reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    WHEN            reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    VAL             reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    VAR             reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    VARIABLE        reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    VINT            reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    VFLOAT          reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    STRING          reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    $end            reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    RKEY            reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)
    RETURN          reduce using rule 70 (if -> IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else .)


state 214

    (72) else -> ELSE . LKEY instrucciones RKEY

    LKEY            shift and go to state 215


state 215

    (72) else -> ELSE LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 221
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 216

    (71) elseif -> ELSE IF . LPAREN condicion RPAREN LKEY instrucciones RKEY

    LPAREN          shift and go to state 222


state 217

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno . RKEY

    RKEY            shift and go to state 223


state 218

    (83) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY .

    $end            reduce using rule 83 (implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS VOID LKEY instrucciones RKEY .)


state 219

    (81) implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY .

    $end            reduce using rule 81 (implementa_funcion -> FUN VARIABLE LPAREN RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY .)


state 220

    (87) retorno -> RETURN asignado .

    RKEY            reduce using rule 87 (retorno -> RETURN asignado .)


state 221

    (72) else -> ELSE LKEY instrucciones . RKEY

    RKEY            shift and go to state 224


state 222

    (71) elseif -> ELSE IF LPAREN . condicion RPAREN LKEY instrucciones RKEY
    (59) condicion -> . booly
    (60) booly -> . comparators
    (61) booly -> . logic
    (62) booly -> . TRUE
    (63) booly -> . FALSE
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (64) logic -> . booly logicoperador booly
    (65) logic -> . NOT booly
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    TRUE            shift and go to state 87
    FALSE           shift and go to state 88
    NOT             shift and go to state 89
    VARIABLE        shift and go to state 66
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    condicion                      shift and go to state 225
    booly                          shift and go to state 97
    comparators                    shift and go to state 85
    logic                          shift and go to state 86
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    dato                           shift and go to state 40
    valor                          shift and go to state 20

state 223

    (80) implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY .

    $end            reduce using rule 80 (implementa_funcion -> FUN VARIABLE LPAREN listaparametros RPAREN DOUBLEPOINTS tipo LKEY instrucciones retorno RKEY .)


state 224

    (72) else -> ELSE LKEY instrucciones RKEY .

    PRINTLN         reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    IF              reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    FOR             reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    WHILE           reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    WHEN            reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    VAL             reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    VAR             reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    VARIABLE        reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    VINT            reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    VFLOAT          reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    STRING          reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    $end            reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    RKEY            reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)
    RETURN          reduce using rule 72 (else -> ELSE LKEY instrucciones RKEY .)


state 225

    (71) elseif -> ELSE IF LPAREN condicion . RPAREN LKEY instrucciones RKEY

    RPAREN          shift and go to state 226


state 226

    (71) elseif -> ELSE IF LPAREN condicion RPAREN . LKEY instrucciones RKEY

    LKEY            shift and go to state 227


state 227

    (71) elseif -> ELSE IF LPAREN condicion RPAREN LKEY . instrucciones RKEY
    (88) instrucciones -> . cuerpoF
    (89) instrucciones -> . cuerpoF instrucciones
    (3) cuerpoF -> . asignacion
    (4) cuerpoF -> . impresion
    (5) cuerpoF -> . asignadores
    (6) cuerpoF -> . comparators
    (7) cuerpoF -> . list
    (8) cuerpoF -> . mutableList
    (9) cuerpoF -> . pair
    (10) cuerpoF -> . inData
    (11) cuerpoF -> . if
    (12) cuerpoF -> . for
    (13) cuerpoF -> . while
    (14) cuerpoF -> . when
    (15) asignacion -> . designacion VARIABLE DOUBLEPOINTS tipo IGUAL valor
    (56) impresion -> . PRINTLN LPAREN datoretornado RPAREN
    (90) asignadores -> . asigna
    (91) asignadores -> . plusasigna
    (92) asignadores -> . minasigna
    (93) asignadores -> . multasigna
    (94) asignadores -> . divasigna
    (50) comparators -> . compareType
    (51) comparators -> . compareGreaterthan
    (52) comparators -> . compareSmallerthan
    (53) comparators -> . compareNotEqual
    (30) list -> . listAsignacion IGUAL listOf
    (43) mutableList -> . mutListAsignacion IGUAL mutableListOf
    (46) pair -> . pairAsignation IGUAL pairBody
    (47) inData -> . designacion VARIABLE IGUAL READLINE LPAREN RPAREN
    (68) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY
    (69) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY else
    (70) if -> . IF LPAREN condicion RPAREN LKEY instrucciones RKEY elseif else
    (77) for -> . FOR LPAREN condicionFor RPAREN LKEY instrucciones RKEY
    (78) while -> . WHILE LPAREN condicion RPAREN LKEY instrucciones RKEY
    (79) when -> . WHEN LPAREN VARIABLE RPAREN LKEY instrucciones RKEY
    (16) designacion -> . VAL
    (17) designacion -> . VAR
    (95) asigna -> . VARIABLE IGUAL asignado
    (96) plusasigna -> . VARIABLE PLUS IGUAL asignado
    (97) minasigna -> . VARIABLE MINUS IGUAL asignado
    (98) multasigna -> . VARIABLE TIMES IGUAL asignado
    (99) divasigna -> . VARIABLE DIVIDE IGUAL asignado
    (48) compareType -> . dato IGUAL IGUAL dato
    (54) compareGreaterthan -> . dato MAYOR dato
    (55) compareSmallerthan -> . dato MINOR dato
    (49) compareNotEqual -> . dato NOT IGUAL dato
    (22) listAsignacion -> . designacion VARIABLE DOUBLEPOINTS LIST diamondType
    (23) listAsignacion -> . designacion VARIABLE
    (40) mutListAsignacion -> . designacion VARIABLE DOUBLEPOINTS MUTABLELIST diamondType
    (41) mutListAsignacion -> . designacion VARIABLE
    (44) pairAsignation -> . designacion LPAREN VARIABLE COMA VARIABLE RPAREN
    (102) dato -> . valor
    (103) dato -> . VARIABLE
    (27) valor -> . VINT
    (28) valor -> . VFLOAT
    (29) valor -> . STRING

    PRINTLN         shift and go to state 21
    IF              shift and go to state 34
    FOR             shift and go to state 35
    WHILE           shift and go to state 36
    WHEN            shift and go to state 37
    VAL             shift and go to state 38
    VAR             shift and go to state 39
    VARIABLE        shift and go to state 5
    VINT            shift and go to state 41
    VFLOAT          shift and go to state 42
    STRING          shift and go to state 43

    instrucciones                  shift and go to state 228
    cuerpoF                        shift and go to state 6
    asignacion                     shift and go to state 7
    impresion                      shift and go to state 8
    asignadores                    shift and go to state 9
    comparators                    shift and go to state 10
    list                           shift and go to state 11
    mutableList                    shift and go to state 12
    pair                           shift and go to state 13
    inData                         shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    when                           shift and go to state 18
    designacion                    shift and go to state 19
    valor                          shift and go to state 20
    asigna                         shift and go to state 22
    plusasigna                     shift and go to state 23
    minasigna                      shift and go to state 24
    multasigna                     shift and go to state 25
    divasigna                      shift and go to state 26
    compareType                    shift and go to state 27
    compareGreaterthan             shift and go to state 28
    compareSmallerthan             shift and go to state 29
    compareNotEqual                shift and go to state 30
    listAsignacion                 shift and go to state 31
    mutListAsignacion              shift and go to state 32
    pairAsignation                 shift and go to state 33
    dato                           shift and go to state 40

state 228

    (71) elseif -> ELSE IF LPAREN condicion RPAREN LKEY instrucciones . RKEY

    RKEY            shift and go to state 229


state 229

    (71) elseif -> ELSE IF LPAREN condicion RPAREN LKEY instrucciones RKEY .

    ELSE            reduce using rule 71 (elseif -> ELSE IF LPAREN condicion RPAREN LKEY instrucciones RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 5 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 147 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 149 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 150 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 158 resolved as shift
WARNING: shift/reduce conflict for OR in state 158 resolved as shift
